{"version":3,"sources":["Food.js"],"names":["FoodType","require","FOOD_TYPE","startSpeed","cc","Class","extends","Component","properties","sprite","Sprite","spriteFrame","default","type","SpriteFrame","displayName","ballPrefab","Prefab","ballSpriteFrames","buffPrefab","onLoad","init","_type","balls","onContacked","other","self","TYPE_BOOM","audioManager","play","pos","v2","node","x","y","destroy","parent","getComponent","destroy4Side","TYPE_BALL","convertToWorldSpaceAR","getPosition","mntNode","find","convertToNodeSpaceAR","i","newBall","instantiate","rand","random0To1","alpha","Math","PI","setSpeed","cos","sin","setPosition","active","window","gameBalls","ballsMap","id","inBalls","TYPE_BUFF","newBuff","gameScore","onDestroy","gameScore1","start"],"mappings":"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","file":"Food.js","sourceRoot":"../../../../../assets/scripts/gameLogic","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\nlet FoodType = require(\"Const\").FOOD_TYPE;\r\nlet startSpeed = 780;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        sprite: cc.Sprite,\r\n        spriteFrame: {\r\n            default: [],\r\n            type: [cc.SpriteFrame],\r\n            displayName: \"spriteFrame\",\r\n        },\r\n        ballPrefab: {\r\n            default: null,\r\n            type: cc.Prefab,\r\n        },\r\n        ballSpriteFrames: [cc.SpriteFrame],\r\n        buffPrefab: cc.Prefab,\r\n        //audio: {\r\n        //    url: cc.AudioClip,\r\n        //    default: null\r\n        //}\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        //this.node.color = cc.color(255, 0, 0);\r\n    },\r\n    init: function (_type, balls = 1) {\r\n        this._type = _type;\r\n        this.balls = balls;\r\n        //let sprite = this.node.getComponent(cc.Sprite);\r\n        let sprite = this.sprite;\r\n        sprite.spriteFrame = this.spriteFrame[_type - 1];\r\n    },\r\n    //碰到球\r\n    onContacked: function (other, self) {\r\n        if (this._type == FoodType.TYPE_BOOM) { //炸弹\r\n            audioManager.play(\"hitBoom\");\r\n            let pos = cc.v2(this.node.x, this.node.y);\r\n            this.node.destroy();\r\n            this.node.parent.getComponent(\"BrickLayout\").destroy4Side(pos);\r\n        }\r\n        else if (this._type == FoodType.TYPE_BALL) {    //分裂一个球\r\n            audioManager.play(\"hitBall\");\r\n            let pos = this.node.parent.convertToWorldSpaceAR(this.node.getPosition());\r\n            let mntNode = cc.find(\"Canvas/gameLogic/mntNode\");\r\n            pos = mntNode.convertToNodeSpaceAR(pos);\r\n            for (let i = 0; i < this.balls; i++) {\r\n                let newBall = cc.instantiate(this.ballPrefab);\r\n                let rand = cc.random0To1();\r\n                let alpha = rand * Math.PI / 2 + Math.PI / 4;\r\n                newBall.getComponent(\"Ball\").setSpeed(startSpeed * Math.cos(alpha), startSpeed * Math.sin(alpha));\r\n                newBall.parent = mntNode;\r\n                newBall.setPosition(pos);\r\n                //let color = Math.min(Math.floor(this.ballSpriteFrames.length * rand), this.ballSpriteFrames.length - 1);\r\n                //newBall.getComponent(cc.Sprite).spriteFrame = this.ballSpriteFrames[color]\r\n                newBall.getComponent(cc.Sprite).spriteFrame = other.getComponent(cc.Sprite).spriteFrame;\r\n                newBall.active = true;\r\n                window.gameBalls += 1;\r\n                window.ballsMap[newBall.getComponent(\"Ball\").id] = window.ballsMap[other.getComponent(\"Ball\").id];\r\n                window.inBalls += window.ballsMap[newBall.getComponent(\"Ball\").id] ? 0 : 1;\r\n            }\r\n            this.node.destroy();\r\n        }\r\n        else if (this._type == FoodType.TYPE_BUFF) { //buff\r\n            audioManager.play(\"hitCoin\");\r\n            let newBuff = cc.instantiate(this.buffPrefab);\r\n            newBuff.getComponent(\"Buff\").init(window.gameScore);\r\n            let pos = this.node.parent.convertToWorldSpaceAR(this.node.getPosition());\r\n            let mntNode = cc.find(\"Canvas/gameLogic/buffMntNode\");\r\n            pos = mntNode.convertToNodeSpaceAR(pos);\r\n            newBuff.parent = mntNode;\r\n            newBuff.setPosition(pos);\r\n            newBuff.active = true;\r\n            this.node.destroy();\r\n        }\r\n        else { }\r\n    },\r\n    onDestroy() {\r\n        window.gameScore1 += 1;\r\n    },\r\n\r\n    start: function () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}