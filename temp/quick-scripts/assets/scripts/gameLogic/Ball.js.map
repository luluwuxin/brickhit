{"version":3,"sources":["Ball.js"],"names":["Norm","sum","i","arguments","length","Math","sqrt","dot","angle","modifyv","angle2radian","PI","common","require","physicTag","PHYSICIS_TAG","window","maxSpeed","cc","Class","extends","Component","properties","onBeginContact","contact","self","other","tag","TAG_BRICK","node","getComponent","onContacked","audioManager","play","TAG_GROUND","TAG_PADDLE","TAG_FOOD","onEndContact","contack","parent","y1","convertToWorldSpaceAR","getPosition","y","y2","vec1","normalizev","getSpeedv","abs","_vec","setSpeed","updateSpeed","x","speedVec","map","a","RigidBody","linearVelocity","v2","ctor","id","getIdentifier","onLoad","group","onEnable","onDisable","atan","tan","update","onDestroy"],"mappings":"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","file":"Ball.js","sourceRoot":"../../../../../assets/scripts/gameLogic","sourcesContent":["function Norm() {\n    let sum = 0;\n    for (var i = 0; i < arguments.length; i++) {\n        sum += arguments[i] * arguments[i];\n    }\n    return Math.sqrt(sum);\n};\nfunction dot() {\n    let sum = 0;\n    let length = arguments.length / 2;\n    for (var i = 0; i < length; i++) {\n        sum += arguments[i] * arguments[i + length];\n    }\n};\nlet angle = 10;\nlet modifyv = [1, 1];    //标准修正向量\nfunction angle2radian(angle) {\n    return angle / 180 * Math.PI;\n}\nvar common = require(\"Common\");\nvar physicTag = require(\"Const\").PHYSICIS_TAG;\n//let maxSpeed = 2500;\nwindow.maxSpeed = 900;\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n\n    /*    init(gameCtl) {\n            this.gameCtl = gameCtl;\n            this.node.position = cc.v2(360,270);//初始化位置\n            this.getComponent(cc.RigidBody).linearVelocity = cc.v2(800,800);//初始化速度\n        }, */\n\n    onBeginContact: function (contact, self, other) {\n        switch (other.tag) {\n            case physicTag.TAG_BRICK://球碰到砖块\n                other.node.getComponent(\"Brick\").onContacked();\n                audioManager.play(\"hitBrick\", true);\n                //this.gameCtl.onBallContactBrick(self.node, other.node);\n                break;\n            case physicTag.TAG_GROUND://球碰到地面\n                //this.gameCtl.onBallContactGround(self.node, other.node);\n                break;\n            case physicTag.TAG_PADDLE://球碰到托盘\n                //this.gameCtl.onBallContactPaddle(self.node, other.node);\n                break;\n            case physicTag.TAG_PADDLE://球碰到墙\n                //this.gameCtl.onBallContactWall(self.node, other.node);\n                break;\n            case physicTag.TAG_FOOD:\n                //console.log(\"touch food\");\n                other.node.getComponent(\"Food\").onContacked(self, other);\n            //other.node.getComponent(\"Brick\").onContacked();\n        }\n    },\n    onEndContact: function (contack, self, other) {\n        if (self.node.parent) {\n            switch (other.tag) {\n                case physicTag.TAG_PADDLE://paddle\n                    let y1 = self.node.parent.convertToWorldSpaceAR(self.node.getPosition()).y;\n                    let y2 = other.node.parent.convertToWorldSpaceAR(other.node.getPosition()).y;\n                    if (y1 < y2) return;\n                    let vec1 = common.normalizev(this.getSpeedv());\n                    vec1[1] = Math.abs(vec1[1]);\n                    if (vec1[1] > 0) {\n                        let _vec = common.normalizev(modifyv);\n                        _vec[0] *= (vec1[0] > 0 ? 1 : -1); //修正向量\n                        this.setSpeed(vec1[0] + _vec[0], vec1[1] + _vec[1]);\n                    }\n                    break;\n            }\n        }\n        this.updateSpeed();\n    },\n    setSpeed: function (x, y) {//设置速度方向\n        //this.speed = cc.v2(x, y);\n        let speedVec = common.normalizev([x, y]).map((a) => a * maxSpeed);\n        this.getComponent(cc.RigidBody).linearVelocity = cc.v2(speedVec[0], speedVec[1]);\n        //this.getComponent(cc.RigidBody).linearVelocity = cc.v2(x, y);\n    },\n    getSpeedv: function () {\n        let v2 = this.getComponent(cc.RigidBody).linearVelocity\n        return [v2.x, v2.y];\n    },\n    ctor: function () {\n        this.id = common.getIdentifier();\n    },\n    onLoad: function () {\n        this.node.group = \"ball\";\n        //this.getComponent(cc.Sprite).spriteFrame = this.getSpriteFrame();\n\n    },\n\n    onEnable: function () {\n    },\n    onDisable: function () {\n    },\n    updateSpeed: function () {\n\n        let x = this.getComponent(cc.RigidBody).linearVelocity.x;\n        let y = this.getComponent(cc.RigidBody).linearVelocity.y;\n        //if(Norm(x, y) >= maxSpeed){\n        let speedVec = common.normalizev([x, y]).map((a) => a * maxSpeed);\n        this.getComponent(cc.RigidBody).linearVelocity = cc.v2(speedVec[0], speedVec[1]);\n        //console.log(speedVec, this.getComponent(cc.RigidBody).linearVelocity)\n        //}\n        if (Math.abs(Math.atan(y / x)) < angle2radian(angle)) {\n            this.setSpeed(x, (y / x > 0 ? 1 : -1) * Math.tan(angle2radian(angle)) * x);\n        }\n        else this.setSpeed(x, y);\n\n    },\n    update: function () {\n        //this.updateSpeed();\n    },\n    onDestroy: function () {\n        //cc.audioEngine.stop(this.current);\n    },\n});"]}