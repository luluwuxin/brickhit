{"version":3,"sources":["Paddle.js"],"names":["self","maxSpeed","common","require","tagConst","PHYSICIS_TAG","buffType","BUFF_TYPE","buffTimeOut","colors","cc","color","window","inBalls","Class","extends","Component","properties","touch","Node","ballSpriteFrames","SpriteFrame","onLoad","_pos","node","getPosition","speedScale","defaultWidth","width","maxWidth","minWidth","ctor","src","v2","dst","reset","game","stages","length","on","onTouchStart","onTouchMove","onTouchEnd","event","getLocation","stop","getComponent","RigidBody","linearVelocity","clearnState","off","unscheduleAllCallbacks","PhysicsCollider","size","apply","changeWidthScale","scale","Math","min","max","contackBall","id","ballsMap","gameBalls","newStage","onBeginContact","contact","other","tag","TAG_BALL","ball","Sprite","spriteFrame","TAG_BUFF","buff","_type","LANG15","SHORT15","REVERSE","destroy","start","update","dt","x","y","speed","sqrt","parent"],"mappings":"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","file":"Paddle.js","sourceRoot":"../../../../../assets/scripts/gameLogic","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\nlet self;\r\nlet maxSpeed = 1800;\r\nlet common = require(\"Common\");\r\nlet tagConst = require(\"Const\").PHYSICIS_TAG;\r\nlet buffType = require(\"Const\").BUFF_TYPE;\r\nlet buffTimeOut = 8;\r\nlet colors = [cc.color(211, 211, 211), cc.color(255, 90, 90), cc.color(255, 222, 89),];\r\nwindow.inBalls = 0;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        touch: cc.Node,\r\n        ballSpriteFrames: [cc.SpriteFrame],\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this._pos = this.node.getPosition();\r\n        this.speedScale = 1.0;\r\n        this.defaultWidth = this.node.width;\r\n        this.maxWidth = this.defaultWidth * 3.0;\r\n        this.minWidth = this.defaultWidth * 0.4;\r\n    },\r\n    ctor: function () {\r\n        self = this;\r\n        this.src = cc.v2(0, 0);\r\n        this.dst = cc.v2(0, 0);\r\n    },\r\n    reset: function (game) {\r\n        this.game = game;\r\n        //this.balls = 0;\r\n        window.inBalls = 0;\r\n        this.stages = 1;\r\n        this.node.color = colors[this.stages % colors.length];\r\n        //this.clearnState();\r\n        this.touch.on(\"touchstart\", this.onTouchStart, this);\r\n        this.touch.on(\"touchmove\", this.onTouchMove, this);\r\n        this.touch.on(\"touchend\", this.onTouchEnd, this);\r\n        this.on = true;\r\n    },\r\n    onTouchStart: function (event) {\r\n        this.src = event.getLocation();\r\n        this.dst = this.src;\r\n    },\r\n    onTouchMove: function (event) {\r\n        //将世界坐标转化为本地坐标\r\n        //let touchPoint = this.node.parent.convertToNodeSpace(event.getLocation());\r\n        //this.node.x = touchPoint.x;\r\n        this.src = this.dst;\r\n        this.dst = event.getLocation();\r\n        //console.log(this.node.x);\r\n    },\r\n    onTouchEnd: function (event) {\r\n        this.dst = event.getLocation();\r\n        this.src = this.dst;\r\n    },\r\n    stop: function () {\r\n        if (!this.on) return;\r\n        //this.dst = this.src;\r\n        this.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, 0);\r\n        this.clearnState();\r\n        this.node.color = colors[0];\r\n        this.touch.off(\"touchstart\", this.onTouchStart, this);\r\n        this.touch.off(\"touchmove\", this.onTouchMove, this);\r\n        this.touch.off(\"touchend\", this.onTouchEnd, this);\r\n        this.on = false;\r\n    },\r\n    clearnState: function () {\r\n        this.unscheduleAllCallbacks();\r\n        this.speedScale = 1.0;\r\n        this.node.width = this.defaultWidth;\r\n        this.getComponent(cc.PhysicsCollider).size.width = this.node.width;\r\n        this.getComponent(cc.PhysicsCollider).apply();\r\n    },\r\n    changeWidthScale: function (scale) {\r\n        let width = this.node.width * scale;\r\n        width = Math.min(this.maxWidth, width);\r\n        width = Math.max(this.minWidth, width);\r\n        this.node.width = width;\r\n        this.getComponent(cc.PhysicsCollider).size.width = width;\r\n        this.getComponent(cc.PhysicsCollider).apply();\r\n    },/*\r\n    contackBall: function(id){\r\n        if (window.ballsMap[id]) this.balls += 1;\r\n                window.ballsMap[id] = false;\r\n                if (window.gameBalls > 0 && this.balls >= window.gameBalls) {\r\n                    this.game.newStage();\r\n                    this.balls = 0; \r\n                }\r\n                console.log(ballsMap, gameBalls, this.balls);\r\n    },*/\r\n    contackBall: function (id) {\r\n        window.ballsMap[id] = false;\r\n        //ball.getComponent(cc.Sprite).spriteFrame = this.ballSpriteFrames[this.stages % this.ballSpriteFrames.length];\r\n        if (window.gameBalls > 0 && inBalls >= window.gameBalls) {\r\n            this.game.newStage(()=>{\r\n                window.inBalls = 0;\r\n                this.stages++;\r\n                this.node.color = colors[this.stages % colors.length];\r\n            });\r\n            \r\n        }\r\n    },\r\n    onBeginContact: function (contact, self, other) {\r\n        switch (other.tag) {\r\n            case tagConst.TAG_BALL:\r\n                let ball = other.node.getComponent(\"Ball\");\r\n                if (window.ballsMap[ball.id]) {\r\n                    inBalls += 1;\r\n                };\r\n                this.contackBall(ball.id);\r\n                ball.getComponent(cc.Sprite).spriteFrame = this.ballSpriteFrames[this.stages % this.ballSpriteFrames.length];\r\n\r\n                break;\r\n            case tagConst.TAG_BUFF:\r\n                let buff = other.node.getComponent(\"Buff\");\r\n                switch (buff._type) {\r\n                    case buffType.LANG15:\r\n                        this.changeWidthScale(1.5);\r\n                        //this.scheduleOnce(()=>this.changeLengthScale(1/1.5), buffTimeOut);\r\n                        break;\r\n                    case buffType.SHORT15:\r\n                        this.changeWidthScale(1 / 1.5);\r\n                        //this.scheduleOnce(()=>this.changeLengthScale(1.5), buffTimeOut);\r\n                        break\r\n                    case buffType.REVERSE:\r\n                        this.speedScale *= -1.0;\r\n                        //this.scheduleOnce(()=>{this.speedScale *= -1.0}, buffTimeOut);\r\n                        break;\r\n                }\r\n                other.node.destroy();\r\n                break;\r\n        }\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        if (!this.on) return;\r\n        let x = (this.dst.x - this.src.x) / dt;\r\n        let y = (this.dst.y - this.src.y) / dt;\r\n        let speed = Math.sqrt(x * x + y * y);\r\n        speed = (x > 0 ? this.speedScale : -this.speedScale) * Math.min(speed, maxSpeed);\r\n        //if (this.node.x >= this.node.parent.width + this.node.width / 4 && speed > 0 || this.node.x <= -this.node.width / 4 && speed < 0) speed = 0;\r\n        if (this.node.x >= this.node.parent.width && speed > 0 || this.node.x <= 0 && speed < 0) speed = 0;\r\n        this.getComponent(cc.RigidBody).linearVelocity = cc.v2(speed, 0);\r\n    },\r\n});\r\n"]}