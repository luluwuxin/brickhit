{"version":3,"sources":["MARC4.js"],"names":["C","window","require","Crypto","util","charenc","UTF8","Binary","MARC4","encrypt","message","password","m","stringToBytes","iv","randomBytes","k","constructor","String","PBKDF2","asBytes","_marc4","bytesToBase64","concat","decrypt","ciphertext","c","base64ToBytes","splice","bytesToString","drop","i","j","s","temp","length"],"mappings":"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","file":"MARC4.js","sourceRoot":"../../../../../../../../assets/script/wx/utils/cryptojs/lib","sourcesContent":["(function(){\r\n\r\nvar C = (typeof window === 'undefined') ? require('./Crypto').Crypto : window.Crypto;\r\n\r\n// Shortcuts\r\nvar util = C.util,\r\n    charenc = C.charenc,\r\n    UTF8 = charenc.UTF8,\r\n    Binary = charenc.Binary;\r\n\r\nvar MARC4 = C.MARC4 = {\r\n\r\n\t/**\r\n\t * Public API\r\n\t */\r\n\r\n\tencrypt: function (message, password) {\r\n\r\n\t\tvar\r\n\r\n\t\t    // Convert to bytes\r\n\t\t    m = UTF8.stringToBytes(message),\r\n\r\n\t\t    // Generate random IV\r\n\t\t    iv = util.randomBytes(16),\r\n\r\n\t\t    // Generate key\r\n\t\t    k = password.constructor == String ?\r\n\t\t        // Derive key from passphrase\r\n\t\t        C.PBKDF2(password, iv, 32, { asBytes: true }) :\r\n\t\t        // else, assume byte array representing cryptographic key\r\n\t\t        password;\r\n\r\n\t\t// Encrypt\r\n\t\tMARC4._marc4(m, k, 1536);\r\n\r\n\t\t// Return ciphertext\r\n\t\treturn util.bytesToBase64(iv.concat(m));\r\n\r\n\t},\r\n\r\n\tdecrypt: function (ciphertext, password) {\r\n\r\n\t\tvar\r\n\r\n\t\t    // Convert to bytes\r\n\t\t    c = util.base64ToBytes(ciphertext),\r\n\r\n\t\t    // Separate IV and message\r\n\t\t    iv = c.splice(0, 16),\r\n\r\n\t\t    // Generate key\r\n\t\t    k = password.constructor == String ?\r\n\t\t        // Derive key from passphrase\r\n\t\t        C.PBKDF2(password, iv, 32, { asBytes: true }) :\r\n\t\t        // else, assume byte array representing cryptographic key\r\n\t\t        password;\r\n\r\n\t\t// Decrypt\r\n\t\tMARC4._marc4(c, k, 1536);\r\n\r\n\t\t// Return plaintext\r\n\t\treturn UTF8.bytesToString(c);\r\n\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Internal methods\r\n\t */\r\n\r\n\t// The core\r\n\t_marc4: function (m, k, drop) {\r\n\r\n\t\t// State variables\r\n\t\tvar i, j, s, temp;\r\n\r\n\t\t// Key setup\r\n\t\tfor (i = 0, s = []; i < 256; i++) s[i] = i;\r\n\t\tfor (i = 0, j = 0;  i < 256; i++) {\r\n\r\n\t\t\tj = (j + s[i] + k[i % k.length]) % 256;\r\n\r\n\t\t\t// Swap\r\n\t\t\ttemp = s[i];\r\n\t\t\ts[i] = s[j];\r\n\t\t\ts[j] = temp;\r\n\r\n\t\t}\r\n\r\n\t\t// Clear counters\r\n\t\ti = j = 0;\r\n\r\n\t\t// Encryption\r\n\t\tfor (var k = -drop; k < m.length; k++) {\r\n\r\n\t\t\ti = (i + 1) % 256;\r\n\t\t\tj = (j + s[i]) % 256;\r\n\r\n\t\t\t// Swap\r\n\t\t\ttemp = s[i];\r\n\t\t\ts[i] = s[j];\r\n\t\t\ts[j] = temp;\r\n\r\n\t\t\t// Stop here if we're still dropping keystream\r\n\t\t\tif (k < 0) continue;\r\n\r\n\t\t\t// Encrypt\r\n\t\t\tm[k] ^= s[(s[i] + s[j]) % 256];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n})();\r\n"]}