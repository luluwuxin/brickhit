{"version":3,"sources":["SHA1.js"],"names":["C","window","require","Crypto","util","charenc","UTF8","Binary","SHA1","message","options","digestbytes","wordsToBytes","_sha1","asBytes","asString","bytesToString","bytesToHex","constructor","String","stringToBytes","m","bytesToWords","l","length","w","H0","H1","H2","H3","H4","i","a","b","c","d","e","j","n","t","_blocksize","_digestsize"],"mappings":"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","file":"SHA1.js","sourceRoot":"../../../../../../../../assets/script/wx/utils/cryptojs/lib","sourcesContent":["(function(){\r\n\r\nvar C = (typeof window === 'undefined') ? require('./Crypto').Crypto : window.Crypto;\r\n\r\n// Shortcuts\r\nvar util = C.util,\r\n    charenc = C.charenc,\r\n    UTF8 = charenc.UTF8,\r\n    Binary = charenc.Binary;\r\n\r\n// Public API\r\nvar SHA1 = C.SHA1 = function (message, options) {\r\n\tvar digestbytes = util.wordsToBytes(SHA1._sha1(message));\r\n\treturn options && options.asBytes ? digestbytes :\r\n\t       options && options.asString ? Binary.bytesToString(digestbytes) :\r\n\t       util.bytesToHex(digestbytes);\r\n};\r\n\r\n// The core\r\nSHA1._sha1 = function (message) {\r\n\r\n\t// Convert to byte array\r\n\tif (message.constructor == String) message = UTF8.stringToBytes(message);\r\n\t/* else, assume byte array already */\r\n\r\n\tvar m  = util.bytesToWords(message),\r\n\t    l  = message.length * 8,\r\n\t    w  =  [],\r\n\t    H0 =  1732584193,\r\n\t    H1 = -271733879,\r\n\t    H2 = -1732584194,\r\n\t    H3 =  271733878,\r\n\t    H4 = -1009589776;\r\n\r\n\t// Padding\r\n\tm[l >> 5] |= 0x80 << (24 - l % 32);\r\n\tm[((l + 64 >>> 9) << 4) + 15] = l;\r\n\r\n\tfor (var i = 0; i < m.length; i += 16) {\r\n\r\n\t\tvar a = H0,\r\n\t\t    b = H1,\r\n\t\t    c = H2,\r\n\t\t    d = H3,\r\n\t\t    e = H4;\r\n\r\n\t\tfor (var j = 0; j < 80; j++) {\r\n\r\n\t\t\tif (j < 16) w[j] = m[i + j];\r\n\t\t\telse {\r\n\t\t\t\tvar n = w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16];\r\n\t\t\t\tw[j] = (n << 1) | (n >>> 31);\r\n\t\t\t}\r\n\r\n\t\t\tvar t = ((H0 << 5) | (H0 >>> 27)) + H4 + (w[j] >>> 0) + (\r\n\t\t\t         j < 20 ? (H1 & H2 | ~H1 & H3) + 1518500249 :\r\n\t\t\t         j < 40 ? (H1 ^ H2 ^ H3) + 1859775393 :\r\n\t\t\t         j < 60 ? (H1 & H2 | H1 & H3 | H2 & H3) - 1894007588 :\r\n\t\t\t                  (H1 ^ H2 ^ H3) - 899497514);\r\n\r\n\t\t\tH4 =  H3;\r\n\t\t\tH3 =  H2;\r\n\t\t\tH2 = (H1 << 30) | (H1 >>> 2);\r\n\t\t\tH1 =  H0;\r\n\t\t\tH0 =  t;\r\n\r\n\t\t}\r\n\r\n\t\tH0 += a;\r\n\t\tH1 += b;\r\n\t\tH2 += c;\r\n\t\tH3 += d;\r\n\t\tH4 += e;\r\n\r\n\t}\r\n\r\n\treturn [H0, H1, H2, H3, H4];\r\n\r\n};\r\n\r\n// Package private blocksize\r\nSHA1._blocksize = 16;\r\n\r\nSHA1._digestsize = 20;\r\n\r\n})();\r\n"]}