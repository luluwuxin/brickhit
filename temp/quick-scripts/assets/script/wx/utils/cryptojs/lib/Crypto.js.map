{"version":3,"sources":["Crypto.js"],"names":["Crypto","util","base64map","window","exports","rotl","n","b","rotr","endian","constructor","Number","i","length","randomBytes","bytes","push","Math","floor","random","bytesToWords","words","wordsToBytes","bytesToHex","hex","toString","join","hexToBytes","c","parseInt","substr","bytesToBase64","btoa","Binary","bytesToString","base64","triplet","j","charAt","base64ToBytes","atob","stringToBytes","replace","imod4","indexOf","pow","charenc","UTF8","str","unescape","encodeURIComponent","decodeURIComponent","escape","charCodeAt","String","fromCharCode","module"],"mappings":"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","file":"Crypto.js","sourceRoot":"../../../../../../../../assets/script/wx/utils/cryptojs/lib","sourcesContent":["if (typeof Crypto == \"undefined\" || ! Crypto.util)\r\n{\r\n(function(){\r\n\r\nvar base64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n// Global Crypto object\r\n// with browser window or with node module\r\nvar Crypto = (typeof window === 'undefined') ? exports.Crypto = {} : window.Crypto = {}; \r\n\r\n// Crypto utilities\r\nvar util = Crypto.util = {\r\n\r\n\t// Bit-wise rotate left\r\n\trotl: function (n, b) {\r\n\t\treturn (n << b) | (n >>> (32 - b));\r\n\t},\r\n\r\n\t// Bit-wise rotate right\r\n\trotr: function (n, b) {\r\n\t\treturn (n << (32 - b)) | (n >>> b);\r\n\t},\r\n\r\n\t// Swap big-endian to little-endian and vice versa\r\n\tendian: function (n) {\r\n\r\n\t\t// If number given, swap endian\r\n\t\tif (n.constructor == Number) {\r\n\t\t\treturn util.rotl(n,  8) & 0x00FF00FF |\r\n\t\t\t       util.rotl(n, 24) & 0xFF00FF00;\r\n\t\t}\r\n\r\n\t\t// Else, assume array and swap all items\r\n\t\tfor (var i = 0; i < n.length; i++)\r\n\t\t\tn[i] = util.endian(n[i]);\r\n\t\treturn n;\r\n\r\n\t},\r\n\r\n\t// Generate an array of any length of random bytes\r\n\trandomBytes: function (n) {\r\n\t\tfor (var bytes = []; n > 0; n--)\r\n\t\t\tbytes.push(Math.floor(Math.random() * 256));\r\n\t\treturn bytes;\r\n\t},\r\n\r\n\t// Convert a byte array to big-endian 32-bit words\r\n\tbytesToWords: function (bytes) {\r\n\t\tfor (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\r\n\t\t\twords[b >>> 5] |= (bytes[i] & 0xFF) << (24 - b % 32);\r\n\t\treturn words;\r\n\t},\r\n\r\n\t// Convert big-endian 32-bit words to a byte array\r\n\twordsToBytes: function (words) {\r\n\t\tfor (var bytes = [], b = 0; b < words.length * 32; b += 8)\r\n\t\t\tbytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\r\n\t\treturn bytes;\r\n\t},\r\n\r\n\t// Convert a byte array to a hex string\r\n\tbytesToHex: function (bytes) {\r\n\t\tfor (var hex = [], i = 0; i < bytes.length; i++) {\r\n\t\t\thex.push((bytes[i] >>> 4).toString(16));\r\n\t\t\thex.push((bytes[i] & 0xF).toString(16));\r\n\t\t}\r\n\t\treturn hex.join(\"\");\r\n\t},\r\n\r\n\t// Convert a hex string to a byte array\r\n\thexToBytes: function (hex) {\r\n\t\tfor (var bytes = [], c = 0; c < hex.length; c += 2)\r\n\t\t\tbytes.push(parseInt(hex.substr(c, 2), 16));\r\n\t\treturn bytes;\r\n\t},\r\n\r\n\t// Convert a byte array to a base-64 string\r\n\tbytesToBase64: function (bytes) {\r\n\r\n\t\t// Use browser-native function if it exists\r\n\t\tif (typeof btoa == \"function\") return btoa(Binary.bytesToString(bytes));\r\n\r\n\t\tfor(var base64 = [], i = 0; i < bytes.length; i += 3) {\r\n\t\t\tvar triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\r\n\t\t\tfor (var j = 0; j < 4; j++) {\r\n\t\t\t\tif (i * 8 + j * 6 <= bytes.length * 8)\r\n\t\t\t\t\tbase64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\r\n\t\t\t\telse base64.push(\"=\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn base64.join(\"\");\r\n\r\n\t},\r\n\r\n\t// Convert a base-64 string to a byte array\r\n\tbase64ToBytes: function (base64) {\r\n\r\n\t\t// Use browser-native function if it exists\r\n\t\tif (typeof atob == \"function\") return Binary.stringToBytes(atob(base64));\r\n\r\n\t\t// Remove non-base-64 characters\r\n\t\tbase64 = base64.replace(/[^A-Z0-9+\\/]/ig, \"\");\r\n\r\n\t\tfor (var bytes = [], i = 0, imod4 = 0; i < base64.length; imod4 = ++i % 4) {\r\n\t\t\tif (imod4 == 0) continue;\r\n\t\t\tbytes.push(((base64map.indexOf(base64.charAt(i - 1)) & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2)) |\r\n\t\t\t           (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\r\n\t\t}\r\n\r\n\t\treturn bytes;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Crypto character encodings\r\nvar charenc = Crypto.charenc = {};\r\n\r\n// UTF-8 encoding\r\nvar UTF8 = charenc.UTF8 = {\r\n\r\n\t// Convert a string to a byte array\r\n\tstringToBytes: function (str) {\r\n\t\treturn Binary.stringToBytes(unescape(encodeURIComponent(str)));\r\n\t},\r\n\r\n\t// Convert a byte array to a string\r\n\tbytesToString: function (bytes) {\r\n\t\treturn decodeURIComponent(escape(Binary.bytesToString(bytes)));\r\n\t}\r\n\r\n};\r\n\r\n// Binary encoding\r\nvar Binary = charenc.Binary = {\r\n\r\n\t// Convert a string to a byte array\r\n\tstringToBytes: function (str) {\r\n\t\tfor (var bytes = [], i = 0; i < str.length; i++)\r\n\t\t\tbytes.push(str.charCodeAt(i) & 0xFF);\r\n\t\treturn bytes;\r\n\t},\r\n\r\n\t// Convert a byte array to a string\r\n\tbytesToString: function (bytes) {\r\n\t\tfor (var str = [], i = 0; i < bytes.length; i++)\r\n\t\t\tstr.push(String.fromCharCode(bytes[i]));\r\n\t\treturn str.join(\"\");\r\n\t}\r\n\r\n};\r\n\r\n})();\r\n}\r\n\r\nmodule.exports = Crypto;"]}