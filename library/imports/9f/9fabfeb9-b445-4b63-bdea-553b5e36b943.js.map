{"version":3,"sources":["../../../../../../../assets/script/wx/framework/widget/assets/script/wx/framework/widget/uiloopscrollview.js"],"names":["DoTweenManager","require","getInstance","DoTweenType","ArrangeDirection","cc","Enum","LEFT_TO_RIGHT","RIGHT_TO_LEFT","UP_TO_DOWN","DOWN_TO_UP","self","Class","extends","Component","properties","autoLayout","default","tooltip","arrangeDirection","type","removeMinLimit","itemDataCount","visible","insertAnimation","removeAnimation","_createItemFunc","_updateItemFunc","onLoad","log","scrollView","node","getComponent","ScrollView","content","horizontal","vertical","scrollViewPanelScale","width","height","anchorX","anchorY","initParameter","itemLoop","NodePool","itemList","Array","firstIndex","initNum","curItemNum","gapDis","firstItem","lastItem","editItemInFront","isScrolling","sollValidate","startPos","Vec2","ZERO","deltaPos","x","y","start","createItemAuto","length","item","createItem","addChild","setPosition","push","initItem","registerCreateItemFunc","func","registerUpdateItemFunc","setInsertAnimation","setRemoveAnimation","createAutoLayoutFirstPageView","Math","floor","console","i","createFirstPageView","validate","setTotalNum","count","resetView","destroy","clear","initialize","resizeContent","newItem","ior","offset","resetItemsPosition","index","fob","toMoveList","slice","inAnimation","callback","callFunc","moveListUp","moveListLeft","removeItem","pos","findItem","splice","dataIndex","getItemFromLoop","addToBack","putItemToLoop","playScrollAnimation","insertItem","inserting","doInsertAnimation","add","p","preIndex","addToFront","refreshViewItem","bool","enabled","blockInputPanel","active","moveToFront","time","scrollToTop","scrollToLeft","moveToEnd","scrollToBottom","scrollToRight","moveTo","scrollToOffset","deleteItem","forEach","get","size","put","isVisible","isItemsUnVisible","dir","unshift","delta","num","priorItem","offsetY","offsetX","backItem","getPosition","scrollBegan","scrollEnd","update","dt","updateTimer","updateInterval","newValidate","lastContentPosY","bufferZone","getPositionInView","worldPos","parent","convertToWorldSpaceAR","position","viewPos","convertToNodeSpaceAR","buffer","isDown","setPositionY"],"mappings":";;;;;;AAAA,IAAIA,iBAAiBC,QAAQ,gBAAR,EAA0BC,WAA1B,EAArB;AACA,IAAIC,cAAcF,QAAQ,eAAR,EAAyBE,WAA3C;;AAEA;;;AAGA,IAAIC,mBAAmBC,GAAGC,IAAH,CAAQ;AAC3BC,mBAAe,CADY;AAE3BC,mBAAe,CAFY;AAG3BC,gBAAY,CAHe;AAI3BC,gBAAY;AAJe,CAAR,CAAvB;;AAOA,IAAIC,OAAO,IAAX,EAAiB;AACjBN,GAAGO,KAAH,CAAS;AACLC,aAASR,GAAGS,SADP;;AAGLC,gBAAY;AACRC,oBAAY;AACRC,qBAAS,KADD;AAERC,qBAAS;AAFD,SADJ;;AAMRC,0BAAkB;AACdF,qBAASb,iBAAiBG,aADZ;AAEda,kBAAMhB,gBAFQ;AAGdc,qBAAS;AAHK,SANV;;AAYRG,wBAAgB;AACZJ,qBAAS,CADG;AAEZC,qBAAS;AAFG,SAZR;;AAiBRI,uBAAe;AACXL,qBAAS,CADE;AAEXM,qBAAS;AAFE,SAjBP;;AAsBRC,yBAAiB;AACbP,qBAAS,CADI;AAEbM,qBAAS;AAFI,SAtBT;;AA2BRE,yBAAiB;AACbR,qBAAS,CADI;AAEbM,qBAAS;AAFI,SA3BT;;AAgCRG,yBAAiB,IAhCT;AAiCRC,yBAAiB;AAjCT,KAHP;;AAuCL;;AAEAC,UAzCK,oBAyCK;AACNvB,WAAGwB,GAAH,CAAO,+CAA+C,KAAKb,UAA3D;AACAL,eAAO,IAAP;;AAEA,aAAKmB,UAAL,GAAkB,KAAKC,IAAL,CAAUC,YAAV,CAAuB3B,GAAG4B,UAA1B,CAAlB;AACA,aAAKC,OAAL,GAAe,KAAKJ,UAAL,CAAgBI,OAA/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAI,KAAKf,gBAAL,IAAyBf,iBAAiBG,aAA1C,IAA2D,KAAKY,gBAAL,IAAyBf,iBAAiBI,aAAzG,EAAwH;AACpH,iBAAKsB,UAAL,CAAgBK,UAAhB,GAA6B,IAA7B;AACA,iBAAKL,UAAL,CAAgBM,QAAhB,GAA2B,KAA3B;AACA,iBAAKC,oBAAL,GAA4B,KAAKN,IAAL,CAAUO,KAAtC;AACH,SAJD,MAIO,IAAI,KAAKnB,gBAAL,IAAyBf,iBAAiBK,UAA1C,IAAwD,KAAKU,gBAAL,IAAyBf,iBAAiBM,UAAtG,EAAkH;AACrH,iBAAKoB,UAAL,CAAgBK,UAAhB,GAA6B,KAA7B;AACA,iBAAKL,UAAL,CAAgBM,QAAhB,GAA2B,IAA3B;AACA,iBAAKC,oBAAL,GAA4B,KAAKN,IAAL,CAAUQ,MAAtC;AACH;;AAED;AACA,YAAI,KAAKT,UAAL,CAAgBM,QAApB,EAA8B;AAC1B,iBAAKF,OAAL,CAAaM,OAAb,GAAuB,GAAvB;AACA,iBAAKN,OAAL,CAAaO,OAAb,GAAuB,CAAvB;AACH,SAHD,MAGO;AACH,iBAAKP,OAAL,CAAaM,OAAb,GAAuB,CAAvB;AACA,iBAAKN,OAAL,CAAaO,OAAb,GAAuB,GAAvB;AACH;;AAED;AACA,aAAKC,aAAL;;AAEA;AACA,aAAKC,QAAL,GAAgB,IAAItC,GAAGuC,QAAP,EAAhB;;AAEA;AACA,aAAKC,QAAL,GAAgB,IAAIC,KAAJ,EAAhB;;AAEA;AACA;AACA;AACH,KAzFI;;;AA2FL;;;AAGAJ,iBA9FK,2BA8FY;AACb,aAAKK,UAAL,GAAkB,CAAlB;AACA,aAAKC,OAAL,GAAe,CAAf;AACA,aAAKC,UAAL,GAAkB,CAAlB,CAHa,CAGQ;;AAErB,aAAKC,MAAL,GAAc,CAAd,CALa,CAKO;;AAEpB,aAAKC,SAAL,GAAiB,IAAjB;AACA,aAAKC,QAAL,GAAgB,IAAhB;;AAEA,aAAKC,eAAL,GAAuB,KAAvB;;AAEA,aAAKC,WAAL,GAAmB,KAAnB;AACA,aAAKC,YAAL,GAAoB,KAApB;;AAEA,aAAKC,QAAL,GAAgBnD,GAAGoD,IAAH,CAAQC,IAAxB;AACA,aAAKC,QAAL,GAAgBtD,GAAGoD,IAAH,CAAQC,IAAxB;AACA,YAAI,KAAKvC,gBAAL,IAAyBf,iBAAiBG,aAA9C,EAA6D;AACzD;AACA,iBAAKoD,QAAL,CAAcC,CAAd,GAAkB,GAAlB;AACH,SAHD,MAGO,IAAI,KAAKzC,gBAAL,IAAyBf,iBAAiBI,aAA9C,EAA6D;AAChE;AACA,iBAAKmD,QAAL,CAAcC,CAAd,GAAkB,CAAC,GAAnB;AACH,SAHM,MAGA,IAAI,KAAKzC,gBAAL,IAAyBf,iBAAiBK,UAA9C,EAA0D;AAC7D;AACA,iBAAKkD,QAAL,CAAcE,CAAd,GAAkB,CAAC,GAAnB;AACH,SAHM,MAGA,IAAI,KAAK1C,gBAAL,IAAyBf,iBAAiBM,UAA9C,EAA0D;AAC7D;AACA,iBAAKiD,QAAL,CAAcE,CAAd,GAAkB,GAAlB;AACH;;AAED;AACA;AACH,KA/HI;AAiILC,SAjIK,mBAiII;AACL;AACA;;AAEI;AACA;AACA;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACH,KAlJI;AAoJLC,kBApJK,4BAoJa;AACd,YAAI,KAAKlB,QAAL,CAAcmB,MAAd,IAAwB,KAAK1C,aAAjC,EAAgD;;AAEhD,YAAI2C,OAAO,KAAKC,UAAL,EAAX;AACA,aAAKhC,OAAL,CAAaiC,QAAb,CAAsBF,IAAtB;AACAA,aAAKG,WAAL,CAAiB/D,GAAGoD,IAAH,CAAQC,IAAzB;AACA,aAAKb,QAAL,CAAcwB,IAAd,CAAmBJ,IAAnB;AACA,aAAKK,QAAL,CAAcL,IAAd,EAAoB,KAAKpB,QAAL,CAAcmB,MAAd,GAAuB,CAA3C;AACH,KA5JI;;;AA8JL;;;;AAIAO,0BAlKK,kCAkKmBC,IAlKnB,EAkKyB;AAC1B,aAAK9C,eAAL,GAAuB8C,IAAvB;AACH,KApKI;;;AAsKL;;;;AAIAC,0BA1KK,kCA0KmBD,IA1KnB,EA0KyB;AAC1B,aAAK7C,eAAL,GAAuB6C,IAAvB;AACH,KA5KI;;;AA8KL;;;;AAIAE,sBAlLK,8BAkLetD,IAlLf,EAkLqB;AACtB,aAAKI,eAAL,GAAuBJ,IAAvB;AACH,KApLI;;;AAsLL;;;;AAIAuD,sBA1LK,8BA0LevD,IA1Lf,EA0LqB;AACtB,aAAKK,eAAL,GAAuBL,IAAvB;AACH,KA5LI;AA8LLwD,iCA9LK,2CA8L4B;AAC7B,aAAKb,cAAL;AACA,YAAI,KAAKjC,UAAL,CAAgBM,QAApB,EAA8B;AAC1B,iBAAKY,OAAL,GAAe6B,KAAKC,KAAL,CAAW,KAAK/C,IAAL,CAAUQ,MAAV,GAAmB,KAAKM,QAAL,CAAc,CAAd,EAAiBN,MAA/C,CAAf;AACH,SAFD,MAEO;AACH,iBAAKS,OAAL,GAAe6B,KAAKC,KAAL,CAAW,KAAK/C,IAAL,CAAUO,KAAV,GAAkB,KAAKO,QAAL,CAAc,CAAd,EAAiBP,KAA9C,CAAf;AACH;AACDyC,gBAAQlD,GAAR,CAAY,eAAe,KAAKmB,OAAhC;;AAEA,aAAK,IAAIgC,IAAI,CAAb,EAAgBA,IAAI,KAAKhC,OAAzB,EAAkCgC,GAAlC,EAAuC;AACnC,iBAAKjB,cAAL;AACH;AACJ,KA1MI;;;AA4ML;;;AAGAkB,uBA/MK,iCA+MkB;AACnB,aAAKC,QAAL;AACA,YAAI,KAAKrC,QAAL,CAAcmB,MAAd,GAAuB,CAA3B,EAA8B;AAC1B;AACA,gBAAI,KAAKlC,UAAL,CAAgBM,QAApB,EAA8B;AAC1B,qBAAKY,OAAL,GAAe6B,KAAKC,KAAL,CAAW,KAAK/C,IAAL,CAAUQ,MAAV,GAAmB,KAAKM,QAAL,CAAc,CAAd,EAAiBN,MAA/C,CAAf;AACH,aAFD,MAEO;AACH,qBAAKS,OAAL,GAAe6B,KAAKC,KAAL,CAAW,KAAK/C,IAAL,CAAUO,KAAV,GAAkB,KAAKO,QAAL,CAAc,CAAd,EAAiBP,KAA9C,CAAf;AACH;AACD,iBAAK,IAAI0C,IAAI,CAAb,EAAgBA,IAAI,KAAKhC,OAAzB,EAAkCgC,GAAlC,EAAuC;AACnC,qBAAKE,QAAL;AACH;AACDH,oBAAQlD,GAAR,CAAY,eAAe,KAAKmB,OAAhC;AACH;AACJ,KA7NI;;;AA+NL;;;;AAIAmC,eAnOK,uBAmOQC,KAnOR,EAmOe;AAChB,aAAK9D,aAAL,GAAqB8D,KAArB;;AAEA,YAAI,KAAKjE,gBAAL,IAAyBf,iBAAiBG,aAA1C,IAA2D,KAAKY,gBAAL,IAAyBf,iBAAiBK,UAAzG,EAAqH;AACjH,iBAAKsC,UAAL,GAAkB,CAAlB;AACH,SAFD,MAEO,IAAI,KAAK5B,gBAAL,IAAyBf,iBAAiBI,aAA1C,IAA2D,KAAKW,gBAAL,IAAyBf,iBAAiBM,UAAzG,EAAqH;AACxH,iBAAKqC,UAAL,GAAkBqC,QAAQ,CAA1B;AACH;AACD,YAAI,KAAKrC,UAAL,GAAkB,CAAtB,EAAyB,KAAKA,UAAL,GAAkB,CAAlB;AAC5B,KA5OI;;;AA8OL;;;AAGAsC,aAjPK,uBAiPQ;AACT,YAAI,KAAK/D,aAAL,GAAqB,CAAzB,EAA4B;;AAE5B,aAAK,IAAI0D,IAAI,CAAb,EAAgBA,IAAI,KAAKnC,QAAL,CAAcmB,MAAlC,EAA0CgB,GAA1C,EAA+C;AAC3C,iBAAKnC,QAAL,CAAcmC,CAAd,EAAiBM,OAAjB;AACH;AACD,aAAKzC,QAAL,GAAgB,EAAhB;AACA,aAAKF,QAAL,CAAc4C,KAAd;;AAEA,aAAKrD,OAAL,CAAaI,KAAb,GAAqB,CAArB;AACA,aAAKJ,OAAL,CAAaK,MAAb,GAAsB,CAAtB;;AAEA,aAAKc,eAAL,GAAuB,KAAvB;AACA,aAAKC,WAAL,GAAmB,KAAnB;;AAEA,aAAKC,YAAL,GAAoB,KAApB;AACA;AACA;;AAEA;AACA,YAAI,KAAKvC,UAAT,EAAqB;AACjB;AACH,SAFD,MAEO,CAEN;AADG;;AAEJ;AACA;AACA,aAAKwE,UAAL;AACH,KA7QI;;;AA+QL;;;;;AAKAC,iBApRK,yBAoRUC,OApRV,EAoRmBC,GApRnB,EAoRwB;AACzB;AACA,YAAI,KAAKtC,eAAT,EAA0B;;AAE1B,YAAIsC,OAAO,CAAX,EAAc;AACV,iBAAK1C,UAAL;AACH,SAFD,MAEO;AACH,iBAAKA,UAAL;AACH;;AAED,YAAI2C,SAAS,CAAb;AACA,YAAI,KAAK9D,UAAL,CAAgBM,QAApB,EAA8B;AAC1BwD,qBAASF,QAAQnD,MAAR,GAAiB,KAAKW,MAA/B;AACA,iBAAKhB,OAAL,CAAaK,MAAb,GAAsBqD,SAAS,KAAKtE,aAApC;AACA,iBAAKY,OAAL,CAAaI,KAAb,GAAqBoD,QAAQpD,KAA7B;;AAEA;AACA,gBAAI,KAAKhB,aAAL,IAAsB,KAAK0B,OAA3B,IAAsC,KAAKd,OAAL,CAAaK,MAAb,GAAsB,KAAKR,IAAL,CAAUQ,MAA1E,EAAkF;AAC9E,qBAAKL,OAAL,CAAaK,MAAb,GAAsB,KAAKR,IAAL,CAAUQ,MAAhC;AACH;;AAEb;;;;;;;;;;;;;AAaS,SAvBD,MAuBO;AACHqD,qBAASF,QAAQpD,KAAR,GAAgB,KAAKY,MAA9B;AACA,iBAAKhB,OAAL,CAAaI,KAAb,GAAqBsD,SAAS,KAAKtE,aAAnC;AACA,iBAAKY,OAAL,CAAaK,MAAb,GAAsBmD,QAAQnD,MAA9B;;AAEA;AACA,gBAAI,KAAKjB,aAAL,IAAsB,KAAK0B,OAA3B,IAAsC,KAAKd,OAAL,CAAaI,KAAb,GAAqB,KAAKP,IAAL,CAAUO,KAAzE,EAAgF;AAC5E,qBAAKJ,OAAL,CAAaI,KAAb,GAAqB,KAAKP,IAAL,CAAUO,KAA/B;AACH;;AAEb;;;;;;;;;;;;;AAaS;AACJ,KA9UI;;;AAgVL;;;;;AAKAuD,sBArVK,8BAqVeC,KArVf,EAqVsBC,GArVtB,EAqV2BvB,IArV3B,EAqViC;AAClC,YAAIwB,aAAa,KAAKnD,QAAL,CAAcoD,KAAd,CAAoBH,KAApB,CAAjB;AACA,YAAIE,WAAWhC,MAAX,IAAqB,CAAzB,EAA4B;AACxB;AACA,gBAAI,CAAC,CAACQ,IAAN,EAAY;AACRA,qBAAKsB,KAAL;AACH,aAFD,MAEO;AACH,qBAAKI,WAAL,CAAiB,KAAjB;AACH;AACD;AACH;;AAED,YAAIC,WAAW9F,GAAG+F,QAAH,CAAY,YAAY;AACnC;AACA,gBAAI,CAAC,CAAC5B,IAAN,EAAY;AACRA,qBAAKsB,KAAL;AACH,aAFD,MAEO;AACH,qBAAKI,WAAL,CAAiB,KAAjB;AACH;AACJ,SAPc,EAOZ,IAPY,CAAf;;AASA,YAAI,KAAKpE,UAAL,CAAgBM,QAApB,EAA8B;AAC1B,gBAAIwD,SAAS,KAAK/C,QAAL,CAAc,CAAd,EAAiBN,MAAjB,GAA0B,KAAKW,MAA5C;AACAlD,2BAAeqG,UAAf,CAA0BL,UAA1B,EAAsC,GAAtC,EAA2CD,MAAMH,MAAjD,EAAyDO,QAAzD;AACH,SAHD,MAGO;AACH,gBAAIP,UAAS,KAAK/C,QAAL,CAAc,CAAd,EAAiBP,KAAjB,GAAyB,KAAKY,MAA3C;AACAlD,2BAAesG,YAAf,CAA4BN,UAA5B,EAAwC,GAAxC,EAA6C,CAACD,GAAD,GAAOH,OAApD,EAA4DO,QAA5D;AACH;AACJ,KAjXI;;;AAmXL;;;;AAIAI,cAvXK,sBAuXOT,KAvXP,EAuXc;AACf,aAAKzC,eAAL,GAAuB,KAAvB;;AAEA,aAAK6C,WAAL,CAAiB,IAAjB;;AAEA,YAAIM,MAAM,KAAKC,QAAL,CAAcX,KAAd,CAAV;AACA,YAAI7B,OAAO,KAAKpB,QAAL,CAAc6D,MAAd,CAAqBF,GAArB,EAA0B,CAA1B,CAAX;;AAEA,aAAKrD,SAAL,GAAiB,KAAKN,QAAL,CAAc,CAAd,CAAjB;AACA,aAAKO,QAAL,GAAgB,KAAKP,QAAL,CAAc,KAAKA,QAAL,CAAcmB,MAAd,GAAuB,CAArC,CAAhB;;AAEA;AACA,aAAK,IAAIgB,IAAIwB,GAAb,EAAkBxB,IAAI,KAAKnC,QAAL,CAAcmB,MAApC,EAA4CgB,GAA5C,EAAiD;AAC7C,gBAAIf,QAAO,KAAKpB,QAAL,CAAcmC,CAAd,CAAX;AACAf,kBAAK0C,SAAL,IAAkB,CAAlB;AACH;;AAED;AACA,YAAI,CAAC,CAAC,KAAKvD,QAAP,IAAmB,KAAKD,SAAL,IAAkB,KAAKC,QAA1C,IAAsD,KAAKA,QAAL,CAAcuD,SAAd,GAA0B,KAAKrF,aAAL,GAAqB,CAAzG,EAA4G;AACxG;AACA;AACA;AACA,gBAAIoE,UAAU,KAAKkB,eAAL,EAAd;AACA,iBAAKC,SAAL,CAAe,KAAKzD,QAApB,EAA8BsC,OAA9B;AACA,iBAAKtC,QAAL,GAAgBsC,OAAhB;AACA,iBAAK7C,QAAL,CAAcwB,IAAd,CAAmBqB,OAAnB;AACH;;AAED;AACA,YAAI,KAAKjE,eAAL,IAAwB,CAA5B,EAA+B;AAC3B,iBAAKqF,aAAL,CAAmB7C,KAAK,CAAL,CAAnB;AACA,iBAAK4B,kBAAL,CAAwBW,GAAxB,EAA6B,CAA7B;AACH,SAHD,MAGO;AACH,gBAAIL,WAAW9F,GAAG+F,QAAH,CAAY,UAAUnC,IAAV,EAAgB;AACvC,qBAAK6C,aAAL,CAAmB7C,IAAnB;AACA,qBAAK4B,kBAAL,CAAwBW,GAAxB,EAA6B,CAA7B;AACH,aAHc,EAGZ,IAHY,EAGNvC,KAAK,CAAL,CAHM,CAAf;AAIAjE,2BAAe+G,mBAAf,CAAmC,KAAKtF,eAAxC,EAAyDwC,KAAK,CAAL,CAAzD,EAAkE,GAAlE,EAAuEkC,QAAvE;AACH;;AAED;AACA;AACH,KAjaI;;;AAmaL;;;;AAIAa,cAvaK,sBAuaOlB,KAvaP,EAuac;AACf,YAAIU,MAAM,KAAKC,QAAL,CAAcX,KAAd,CAAV;AACAzF,WAAGwB,GAAH,CAAO,oBAAoB2E,GAA3B;AACA,YAAIA,OAAO,CAAC,CAAZ,EAAe;;AAEf,aAAKnD,eAAL,GAAuB,KAAvB;AACA;AACA,aAAK4D,SAAL,GAAiB,IAAjB;;AAEA,aAAKpB,kBAAL,CAAwBW,GAAxB,EAA6B,CAAC,CAA9B,EAAiC,KAAKU,iBAAtC;AACH,KAjbI;;;AAmbL;;;;AAIAA,qBAvbK,6BAubcpB,KAvbd,EAubqB;AACtB;AACA,aAAK,IAAId,IAAIc,KAAb,EAAoBd,IAAIrE,KAAKkC,QAAL,CAAcmB,MAAtC,EAA8CgB,GAA9C,EAAmD;AAC/C,gBAAIf,OAAOtD,KAAKkC,QAAL,CAAcmC,CAAd,CAAX;AACAf,iBAAK0C,SAAL,IAAkB,CAAlB;AACH;;AAED,YAAIjB,UAAU/E,KAAKiG,eAAL,EAAd;AACAjG,aAAKkC,QAAL,CAAc6D,MAAd,CAAqBZ,KAArB,EAA4B,CAA5B,EAA+BJ,OAA/B;;AAEA;AACA,YAAI/E,KAAKkC,QAAL,CAAcmB,MAAd,IAAwB,CAA5B,EAA+B;AAC3BrD,iBAAK2D,QAAL,CAAcoB,OAAd,EAAuB/E,KAAKoC,UAA5B;AACA,gBAAIyD,MAAM7F,KAAK6C,QAAL,CAAc2D,GAAd,CAAkB9G,GAAG+G,CAAH,CAAKzG,KAAKgD,QAAL,CAAcC,CAAd,GAAkB8B,QAAQpD,KAA/B,EAAsC3B,KAAKgD,QAAL,CAAcE,CAAd,GAAkB6B,QAAQnD,MAAhE,CAAlB,CAAV;AACAmD,oBAAQtB,WAAR,CAAoBoC,GAApB;AACH,SAJD,MAIO;AACH,gBAAIa,WAAWvB,QAAQ,CAAvB;AACA,gBAAIuB,WAAW,CAAf,EAAkB;AACd1G,qBAAK2G,UAAL,CAAgB3G,KAAKkC,QAAL,CAAciD,QAAM,CAApB,CAAhB,EAAwCJ,OAAxC;AACH,aAFD,MAEO;AACH/E,qBAAKkG,SAAL,CAAelG,KAAKkC,QAAL,CAAcwE,QAAd,CAAf,EAAwC3B,OAAxC;AACH;AACJ;;AAED;;AAEA/E,aAAK4G,eAAL;;AAEA5G,aAAKwC,SAAL,GAAiBxC,KAAKkC,QAAL,CAAc,CAAd,CAAjB;AACAlC,aAAKyC,QAAL,GAAgBzC,KAAKkC,QAAL,CAAclC,KAAKkC,QAAL,CAAcmB,MAAd,GAAuB,CAArC,CAAhB;;AAEA;AACA,YAAIrD,KAAKa,eAAL,IAAwB,IAA5B,EAAkC;AAC9Bb,iBAAKsG,SAAL,GAAiB,KAAjB;AACA;AACH,SAHD,MAGO;AACH,gBAAId,WAAW9F,GAAG+F,QAAH,CAAY,YAAY;AACnCzF,qBAAKsG,SAAL,GAAiB,KAAjB;AACA;AACH,aAHc,EAGZtG,IAHY,CAAf;AAIAX,2BAAe+G,mBAAf,CAAmCpG,KAAKa,eAAxC,EAAyDkE,OAAzD,EAAkE,GAAlE,EAAuES,QAAvE;AACH;AACJ,KAjeI;;;AAmeL;;;;AAIAD,eAveK,uBAueQsB,IAveR,EAuec;AACf,aAAK1F,UAAL,CAAgB2F,OAAhB,GAA0B,CAACD,IAA3B;AACA,aAAKjE,YAAL,GAAoBiE,IAApB;AACA,aAAKE,eAAL,CAAqBC,MAArB,GAA8BH,IAA9B;AACH,KA3eI;;;AA6eL;;;AAGAI,eAhfK,uBAgfQC,IAhfR,EAgfc;AACfA,eAAO,CAAC,CAAC,CAACA,IAAH,GAAU,GAAV,GAAgBA,IAAvB;AACA,aAAKvE,WAAL,GAAmB,IAAnB;AACA,YAAI,KAAKxB,UAAL,CAAgBM,QAApB,EAA8B;AAC1B,iBAAKN,UAAL,CAAgBgG,WAAhB,CAA4BD,IAA5B;AACH,SAFD,MAEO;AACH,iBAAK/F,UAAL,CAAgBiG,YAAhB,CAA6BF,IAA7B;AACH;AACJ,KAxfI;;;AA0fL;;;AAGAG,aA7fK,qBA6fMH,IA7fN,EA6fY;AACbA,eAAO,CAAC,CAAC,CAACA,IAAH,GAAU,GAAV,GAAgBA,IAAvB;AACA,aAAKvE,WAAL,GAAmB,IAAnB;AACA,YAAI,KAAKxB,UAAL,CAAgBM,QAApB,EAA8B;AAC1B,iBAAKN,UAAL,CAAgBmG,cAAhB,CAA+BJ,IAA/B;AACH,SAFD,MAEO;AACH,iBAAK/F,UAAL,CAAgBoG,aAAhB,CAA8BL,IAA9B;AACH;AACJ,KArgBI;;;AAugBL;;;;;AAKAM,UA5gBK,kBA4gBGrC,KA5gBH,EA4gBU+B,IA5gBV,EA4gBgB;AACjB,YAAI,KAAKhF,QAAL,CAAcmB,MAAd,IAAwB,CAA5B,EAA+B;;AAE/B6D,eAAO,CAAC,CAAC,CAACA,IAAH,GAAU,GAAV,GAAgBA,IAAvB;AACA,aAAKvE,WAAL,GAAmB,IAAnB;;AAEA,YAAIW,OAAO,KAAKpB,QAAL,CAAc,CAAd,CAAX;AACA,YAAI,KAAKf,UAAL,CAAgBM,QAApB,EAA8B;AAC1B,iBAAKN,UAAL,CAAgBsG,cAAhB,CAA+B/H,GAAG+G,CAAH,CAAK,CAAL,EAAQnD,KAAK1B,MAAL,GAAcuD,KAAtB,CAA/B,EAA6D+B,IAA7D;AACH,SAFD,MAEO;AACH,iBAAK/F,UAAL,CAAgBsG,cAAhB,CAA+B/H,GAAG+G,CAAH,CAAKnD,KAAK3B,KAAL,GAAawD,KAAlB,EAAyB,CAAzB,CAA/B,EAA4D+B,IAA5D;AACH;AACJ,KAxhBI;;;AA0hBL;;;AAGA3D,cA7hBK,wBA6hBS;AACV,YAAID,OAAO,KAAKvC,eAAL,EAAX;AACA,eAAOuC,IAAP;AACH,KAhiBI;;;AAkiBL;;;;;AAKAK,YAviBK,oBAuiBKL,IAviBL,EAuiBW6B,KAviBX,EAuiBkB;AACnB7B,aAAK0C,SAAL,GAAiBb,KAAjB;AACA,aAAKnE,eAAL,CAAqBsC,IAArB,EAA2B6B,KAA3B;AACH,KA1iBI;;;AA4iBL;;;;AAIAuC,cAhjBK,sBAgjBOvC,KAhjBP,EAgjBc;AACf,YAAI7B,OAAO,KAAKpB,QAAL,CAAc6D,MAAd,CAAqBZ,KAArB,EAA4B,CAA5B,CAAX;;AAEA,aAAKgB,aAAL,CAAmB7C,KAAK,CAAL,CAAnB;;AAEA,aAAKd,SAAL,GAAiB,KAAKN,QAAL,CAAc,CAAd,CAAjB;AACA,aAAKO,QAAL,GAAgB,KAAKP,QAAL,CAAc,KAAKA,QAAL,CAAcmB,MAAd,GAAuB,CAArC,CAAhB;AACH,KAvjBI;;;AAyjBL;;;;;AAKAyC,YA9jBK,oBA8jBKX,KA9jBL,EA8jBY;AACb,aAAK,IAAId,IAAI,CAAb,EAAgBA,IAAI,KAAKnC,QAAL,CAAcmB,MAAlC,EAA0CgB,GAA1C,EAA+C;AAC3C,gBAAIf,OAAO,KAAKpB,QAAL,CAAcmC,CAAd,CAAX;AACA,gBAAIf,KAAK0C,SAAL,IAAkBb,KAAtB,EAA6B;AACzB,uBAAOd,CAAP;AACH;AACJ;;AAED,YAAIc,SAAS,KAAKjD,QAAL,CAAcmB,MAA3B,EAAmC;AAC/B,mBAAO8B,KAAP;AACH;;AAED,eAAO,CAAC,CAAR;AACH,KA3kBI;;;AA6kBL;;;AAGAyB,mBAhlBK,6BAglBc;AAAA;;AACf,YAAI,KAAK1E,QAAL,CAAcmB,MAAd,GAAuB,CAA3B,EAA8B;AAC1B,iBAAKnB,QAAL,CAAcyF,OAAd,CAAsB,gBAAQ;AAC1B,sBAAK3G,eAAL,CAAqBsC,IAArB,EAA2BA,KAAK0C,SAAhC;AACH,aAFD;AAGH;AACJ,KAtlBI;;;AAwlBL;;;AAGAC,mBA3lBK,6BA2lBc;AACf,YAAI3C,OAAO,KAAKtB,QAAL,CAAc4F,GAAd,EAAX;AACA,YAAItE,QAAQ,IAAZ,EAAkB;AACdA,mBAAO,KAAKC,UAAL,EAAP;AACAa,oBAAQlD,GAAR,CAAY,+BAAZ;AACH;;AAED,aAAKK,OAAL,CAAaiC,QAAb,CAAsBF,IAAtB;AACA;;AAEA;AACA,aAAKwB,aAAL,CAAmBxB,IAAnB,EAAyB,CAAzB;;AAEA,eAAOA,IAAP;AACH,KAzmBI;;;AA2mBL;;;;;AAKA6C,iBAhnBK,yBAgnBU7C,IAhnBV,EAgnBgB;AACjB;AACA,aAAKwB,aAAL,CAAmBxB,IAAnB,EAAyB,CAAC,CAA1B;;AAEA,YAAI,KAAKtB,QAAL,CAAc6F,IAAd,IAAsB,CAA1B,EAA6B;AACzBzD,oBAAQlD,GAAR,CAAY,oCAAoCoC,KAAK0C,SAArD;AACA1C,iBAAKqB,OAAL;AACA;AACH;AACDrB,aAAK0C,SAAL,GAAiB,CAAC,CAAlB;AACA,aAAKhE,QAAL,CAAc8F,GAAd,CAAkBxE,IAAlB;AACH,KA3nBI;;;AA6nBL;;;;AAIAyE,aAjoBK,qBAioBMzE,IAjoBN,EAioBY;AACb,YAAIA,KAAKL,CAAL,GAAS,KAAK1B,OAAL,CAAa0B,CAAtB,GAA0BK,KAAK3B,KAAL,GAAa,CAAvC,GAA2C,CAAC,KAAKP,IAAL,CAAUO,KAAX,GAAmB,CAA9D,IACA2B,KAAKL,CAAL,GAAS,KAAK1B,OAAL,CAAa0B,CAAtB,GAA0BK,KAAK3B,KAAL,GAAa,CAAvC,GAA2C,KAAKP,IAAL,CAAUO,KAAV,GAAkB,CAD7D,IAEA2B,KAAKJ,CAAL,GAAS,KAAK3B,OAAL,CAAa2B,CAAtB,GAA0BI,KAAK1B,MAAL,GAAc,CAAxC,GAA4C,CAAC,KAAKR,IAAL,CAAUQ,MAAX,GAAoB,CAFhE,IAGA0B,KAAKJ,CAAL,GAAS,KAAK3B,OAAL,CAAa2B,CAAtB,GAA0BI,KAAK1B,MAAL,GAAc,CAAxC,GAA4C,KAAKR,IAAL,CAAUQ,MAAV,GAAmB,CAHnE,EAGsE;;AAElE,mBAAO,KAAP;AACH,SAND,MAMO;AACH,mBAAO,IAAP;AACH;AACJ,KA3oBI;;;AA6oBL;;;;;;AAMAoG,oBAnpBK,4BAmpBa7C,KAnpBb,EAmpBoBV,KAnpBpB,EAmpB2BwD,GAnpB3B,EAmpBgC;AACjC,YAAI,KAAK/F,QAAL,CAAcmB,MAAd,GAAuBoB,KAA3B,EAAkC,OAAO,KAAP;AAClC,aAAK,IAAIJ,IAAI,CAAb,EAAgBA,IAAII,KAApB,EAA2BJ,GAA3B,EAAgC;AAC5B,gBAAIf,OAAO,KAAKpB,QAAL,CAAciD,QAAQ8C,MAAM5D,CAA5B,CAAX;AACA,gBAAI,KAAK0D,SAAL,CAAezE,IAAf,CAAJ,EAA0B;AACtB,uBAAO,KAAP;AACH;AACJ;AACD,eAAO,IAAP;AACH,KA5pBI;;;AA8pBL;;;AAGAiB,YAjqBK,sBAiqBO;AACR,YAAI,KAAK+B,SAAL,IAAkB,IAAtB,EAA4B;AAC5B,YAAI,KAAK3F,aAAL,IAAsB,CAAtB,IAA2B,KAAKN,UAApC,EAAgD;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAI,KAAK6B,QAAL,CAAcmB,MAAd,IAAwB,CAA5B,EAA+B;AAC3B,gBAAIC,OAAO,KAAK2C,eAAL,EAAX;AACA,iBAAKtC,QAAL,CAAcL,IAAd,EAAoB,KAAKlB,UAAzB;;AAEA;AACA,gBAAIyD,MAAM,KAAKhD,QAAL,CAAc2D,GAAd,CAAkB9G,GAAG+G,CAAH,CAAK,KAAKzD,QAAL,CAAcC,CAAd,GAAkBK,KAAK3B,KAA5B,EAAmC,KAAKqB,QAAL,CAAcE,CAAd,GAAkBI,KAAK1B,MAA1D,CAAlB,CAAV;AACA;AACA;AACA0B,iBAAKG,WAAL,CAAiBoC,GAAjB;;AAEA,iBAAKrD,SAAL,GAAiBc,IAAjB;AACA,iBAAKb,QAAL,GAAgBa,IAAhB;AACA,iBAAKpB,QAAL,CAAcwB,IAAd,CAAmBJ,IAAnB;AACH;;AAED;;AAEA;AACA,YAAI,KAAKyE,SAAL,CAAe,KAAKvF,SAApB,CAAJ,EAAoC;AAChC,gBAAI,KAAKA,SAAL,CAAewD,SAAf,GAA2B,CAA/B,EAAkC;AAC9B;AACA,qBAAKtD,eAAL,GAAuB,IAAvB;;AAEA,oBAAIY,SAAO,KAAK2C,eAAL,EAAX;AACA,qBAAKU,UAAL,CAAgB,KAAKnE,SAArB,EAAgCc,MAAhC;AACA,qBAAKd,SAAL,GAAiBc,MAAjB;AACA,qBAAKpB,QAAL,CAAcgG,OAAd,CAAsB5E,MAAtB;AACAc,wBAAQlD,GAAR,CAAY,mCAAmCoC,OAAK0C,SAApD;AACH;AACJ,SAXD,MAWO;AACH,gBAAImC,QAAQ,KAAK3F,SAAL,CAAeU,CAAf,GAAmB,KAAK3B,OAAL,CAAa2B,CAAhC,GAAoC,KAAKV,SAAL,CAAeZ,MAAf,GAAwB,CAA5D,GAAgE,KAAKR,IAAL,CAAUQ,MAAV,GAAmB,CAA/F;AACA,gBAAIuG,QAAQ,CAAZ,EAAe;AACX/D,wBAAQlD,GAAR,CAAY,8CAAZ,EAA4DiH,KAA5D;AACA,oBAAIC,MAAMlE,KAAKC,KAAL,CAAW,CAAC,KAAK/C,IAAL,CAAUQ,MAAV,GAAmBuG,KAApB,IAA6B,KAAK1F,QAAL,CAAcb,MAAtD,CAAV;;AAEA,qBAAK,IAAIyC,IAAI,CAAb,EAAgBA,IAAI+D,GAApB,EAAyB/D,GAAzB,EAA8B;AAC1B,wBAAI,KAAK7B,SAAL,CAAewD,SAAf,GAA2B,CAA/B,EAAkC;AAC9B;AACA,6BAAKtD,eAAL,GAAuB,IAAvB;;AAEA,4BAAIY,SAAO,KAAK2C,eAAL,EAAX;AACA,6BAAKU,UAAL,CAAgB,KAAKnE,SAArB,EAAgCc,MAAhC;AACA,6BAAKd,SAAL,GAAiBc,MAAjB;AACA,6BAAKpB,QAAL,CAAcgG,OAAd,CAAsB5E,MAAtB;AACAc,gCAAQlD,GAAR,CAAY,gDAAgDoC,OAAK0C,SAAjE;AACH;AACJ;AACD;AACH;;AAED;AACA;AACA,gBAAI,KAAKgC,gBAAL,CAAsB,CAAtB,EAAyB,KAAKtH,cAA9B,EAA8C,CAA9C,CAAJ,EAAsD;AAClD,qBAAKgC,eAAL,GAAuB,IAAvB;AACA0B,wBAAQlD,GAAR,CAAY,mCAAmC,KAAKsB,SAAL,CAAewD,SAA9D;AACA,qBAAK0B,UAAL,CAAgB,CAAhB;AACA;AACH;AACJ;;AAED;AACA;AACA;AACA;;AAEA,YAAI,KAAKK,SAAL,CAAe,KAAKtF,QAApB,CAAJ,EAAmC;AACnC;AACI,gBAAI,KAAKA,QAAL,CAAcuD,SAAd,GAA0B,KAAKrF,aAAL,GAAqB,CAAnD,EAAsD;AAClD;AACA,qBAAK+B,eAAL,GAAuB,KAAvB;;AAEA,oBAAIY,SAAO,KAAK2C,eAAL,EAAX;AACA,qBAAKC,SAAL,CAAe,KAAKzD,QAApB,EAA8Ba,MAA9B;AACA,qBAAKb,QAAL,GAAgBa,MAAhB;AACA,qBAAKpB,QAAL,CAAcwB,IAAd,CAAmBJ,MAAnB;AACAc,wBAAQlD,GAAR,CAAY,kCAAkCoC,OAAK0C,SAAnD;AACH;AACJ,SAZD,MAYO;AACH,gBAAImC,SAAQ,KAAK1F,QAAL,CAAcS,CAAd,GAAkB,KAAK3B,OAAL,CAAa2B,CAA/B,GAAmC,KAAKT,QAAL,CAAcb,MAAd,GAAuB,CAA1D,GAA8D,KAAKR,IAAL,CAAUQ,MAAV,GAAmB,CAA7F;AACA,gBAAIuG,SAAQ,CAAZ,EAAe;AACX/D,wBAAQlD,GAAR,CAAY,4CAAZ,EAA0DiH,MAA1D;AACA,oBAAIC,OAAMlE,KAAKC,KAAL,CAAW,CAAC,KAAK/C,IAAL,CAAUQ,MAAV,GAAmBuG,MAApB,IAA6B,KAAK1F,QAAL,CAAcb,MAAtD,CAAV;;AAEA,qBAAK,IAAIyC,KAAI,CAAb,EAAgBA,KAAI+D,IAApB,EAAyB/D,IAAzB,EAA8B;AAC1B,wBAAI,KAAK5B,QAAL,CAAcuD,SAAd,GAA0B,KAAKrF,aAAL,GAAqB,CAAnD,EAAsD;AAClD;AACA,6BAAK+B,eAAL,GAAuB,KAAvB;;AAEA,4BAAIY,SAAO,KAAK2C,eAAL,EAAX;AACA,6BAAKC,SAAL,CAAe,KAAKzD,QAApB,EAA8Ba,MAA9B;AACA,6BAAKb,QAAL,GAAgBa,MAAhB;AACA,6BAAKpB,QAAL,CAAcwB,IAAd,CAAmBJ,MAAnB;AACAc,gCAAQlD,GAAR,CAAY,+CAA+CoC,OAAK0C,SAAhE;AACH;AACJ;AACD;AACH;;AAED;AACA;AACA,gBAAI,KAAKgC,gBAAL,CAAsB,KAAK9F,QAAL,CAAcmB,MAAd,GAAuB,CAA7C,EAAgD,KAAK3C,cAArD,EAAqE,CAAC,CAAtE,CAAJ,EAA8E;AAC1E,qBAAKgC,eAAL,GAAuB,KAAvB;AACA0B,wBAAQlD,GAAR,CAAY,kCAAkC,KAAKuB,QAAL,CAAcuD,SAA5D;AACA,qBAAK0B,UAAL,CAAgB,KAAKxF,QAAL,CAAcmB,MAAd,GAAuB,CAAvC;AACA;AACH;AACJ;;AAED;AACH,KA7xBI;;;AA+xBL;;;;;AAKAsD,cApyBK,sBAoyBO0B,SApyBP,EAoyBkBtD,OApyBlB,EAoyB2B;AAC5B;AACA,aAAKpB,QAAL,CAAcoB,OAAd,EAAuBsD,UAAUrC,SAAV,GAAsB,CAA7C;AACA;AACA,YAAI,KAAK7E,UAAL,CAAgBM,QAApB,EAA8B;AAC1B,gBAAI6G,UAAUD,UAAUzG,MAAV,GAAmB,CAAnB,GAAuB,KAAKW,MAA5B,GAAqCwC,QAAQnD,MAAR,GAAiB,CAApE;AACAmD,oBAAQ9B,CAAR,GAAYoF,UAAUpF,CAAtB;AACA8B,oBAAQ7B,CAAR,GAAYmF,UAAUnF,CAAV,GAAcoF,OAA1B;AACH,SAJD,MAIO;AACH,gBAAIC,UAAUF,UAAU1G,KAAV,GAAkB,CAAlB,GAAsB,KAAKY,MAA3B,GAAoCwC,QAAQpD,KAAR,GAAgB,CAAlE;AACAoD,oBAAQ9B,CAAR,GAAYoF,UAAUpF,CAAV,GAAcsF,OAA1B;AACAxD,oBAAQ7B,CAAR,GAAYmF,UAAUnF,CAAtB;AACH;AACJ,KAjzBI;;;AAmzBL;;;;;AAKAgD,aAxzBK,qBAwzBMsC,QAxzBN,EAwzBgBzD,OAxzBhB,EAwzByB;AAC1B,aAAKpB,QAAL,CAAcoB,OAAd,EAAuByD,SAASxC,SAAT,GAAqB,CAA5C;AACA;AACA,YAAI,KAAK7E,UAAL,CAAgBM,QAApB,EAA8B;AAC1B,gBAAI6G,UAAUE,SAAS5G,MAAT,GAAkB,CAAlB,GAAsB,KAAKW,MAA3B,GAAoCwC,QAAQnD,MAAR,GAAiB,CAAnE;AACAmD,oBAAQ9B,CAAR,GAAYuF,SAASvF,CAArB;AACA8B,oBAAQ7B,CAAR,GAAYsF,SAAStF,CAAT,GAAaoF,OAAzB;AACH,SAJD,MAIO;AACH,gBAAIC,UAAUC,SAAS7G,KAAT,GAAiB,CAAjB,GAAqB,KAAKY,MAA1B,GAAmCwC,QAAQpD,KAAR,GAAgB,CAAjE;AACAoD,oBAAQ9B,CAAR,GAAYuF,SAASvF,CAAT,GAAasF,OAAzB;AACAxD,oBAAQ7B,CAAR,GAAYsF,SAAStF,CAArB;AACH;;AAEDkB,gBAAQlD,GAAR,CAAY,eAAZ,EAA6B6D,QAAQ0D,WAAR,EAA7B;AACH,KAt0BI;;;AAw0BL;;;AAGAC,eA30BK,yBA20BU;AACX,aAAK/F,WAAL,GAAmB,IAAnB;AACH,KA70BI;;;AA+0BL;;;AAGAgG,aAl1BK,uBAk1BQ;AACT,aAAKhG,WAAL,GAAmB,KAAnB;AACH,KAp1BI;AAs1BLiG,UAt1BK,kBAs1BGC,EAt1BH,EAs1BO;AACR;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAKC,WAAL,IAAoBD,EAApB;AACA,YAAI,KAAKC,WAAL,GAAmB,KAAKC,cAA5B,EAA4C;AAC5C,aAAKD,WAAL,GAAmB,CAAnB;;AAEA,aAAKE,WAAL;AACH,KAz3BI;AA23BLnE,cA33BK,wBA23BS;AACVT,gBAAQlD,GAAR,CAAY,gCAAZ;;AAEA,aAAK4H,WAAL,GAAmB,CAAnB;AACA,aAAKC,cAAL,GAAsB,GAAtB;AACA,aAAKE,eAAL,GAAuB,CAAvB;AACA,aAAKC,UAAL,GAAkB,GAAlB;;AAEA;AACA;;AAEA,YAAI7G,UAAU,KAAK1B,aAAL,GAAqB,EAArB,GAA0B,EAA1B,GAA+B,KAAKA,aAAlD;;AAEA,aAAK,IAAI0D,IAAI,CAAb,EAAgBA,IAAIhC,OAApB,EAA6BgC,GAA7B,EAAkC;AAC9B,gBAAIf,OAAO,KAAKC,UAAL,EAAX;AACA,iBAAKhC,OAAL,CAAaiC,QAAb,CAAsBF,IAAtB;AACAA,iBAAKG,WAAL,CAAiB,CAAjB,EAAoB,CAACH,KAAK1B,MAAN,IAAgB,MAAMyC,CAAtB,IAA2B,KAAK9B,MAAL,IAAe8B,IAAI,CAAnB,CAA/C;AACA,iBAAKV,QAAL,CAAcL,IAAd,EAAoBe,CAApB;AACA,iBAAKnC,QAAL,CAAcwB,IAAd,CAAmBJ,IAAnB;AACH;;AAED,YAAI,KAAKpB,QAAL,CAAcmB,MAAd,IAAwB,CAA5B,EAA+B;;AAE/B,YAAI4B,SAAS,KAAK/C,QAAL,CAAc,CAAd,EAAiBN,MAAjB,GAA0B,KAAKW,MAA5C;AACA,aAAKhB,OAAL,CAAaI,KAAb,GAAqB,KAAKO,QAAL,CAAc,CAAd,EAAiBP,KAAtC;AACA,aAAKJ,OAAL,CAAaK,MAAb,GAAsB,KAAKjB,aAAL,GAAqBsE,MAArB,GAA8B,KAAK1C,MAAzD;;AAEA6B,gBAAQlD,GAAR,CAAY,kCAAZ,EAAgD,KAAKK,OAAL,CAAaK,MAA7D;AACAwC,gBAAQlD,GAAR,CAAY,qCAAZ,EAAmD,KAAKgB,QAAL,CAAcmB,MAAjE;AACH,KAx5BI;AA05BL8F,qBA15BK,6BA05Bc7F,IA15Bd,EA05BoB;AACrB,YAAI8F,WAAW9F,KAAK+F,MAAL,CAAYC,qBAAZ,CAAkChG,KAAKiG,QAAvC,CAAf;AACA,YAAIC,UAAU,KAAKrI,UAAL,CAAgBC,IAAhB,CAAqBqI,oBAArB,CAA0CL,QAA1C,CAAd;AACA,eAAOI,OAAP;AACH,KA95BI;AAg6BLR,eAh6BK,yBAg6BU;AACX,YAAI,KAAK9G,QAAL,CAAcmB,MAAd,IAAwB,CAA5B,EAA+B;;AAE/B,YAAIqG,SAAS,KAAKR,UAAlB;;AAEA,YAAIS,SAAS,KAAKpI,OAAL,CAAa2B,CAAb,GAAiB,KAAK+F,eAAnC;AACA,YAAIhE,SAAS,CAAC,KAAK/C,QAAL,CAAc,CAAd,EAAiBN,MAAjB,GAA0B,KAAKW,MAAhC,IAA0C,KAAKL,QAAL,CAAcmB,MAArE;AACA,aAAK,IAAIgB,IAAI,CAAb,EAAgBA,IAAI,KAAKnC,QAAL,CAAcmB,MAAlC,EAA0C,EAAEgB,CAA5C,EAA+C;AAC3C,gBAAIf,OAAO,KAAKpB,QAAL,CAAcmC,CAAd,CAAX;AACA,gBAAImF,UAAU,KAAKL,iBAAL,CAAuB7F,IAAvB,CAAd;AACA,gBAAIqG,MAAJ,EAAY;AACR,oBAAIH,QAAQtG,CAAR,GAAY,CAACwG,MAAb,IAAuBpG,KAAKJ,CAAL,GAAS+B,MAAT,GAAkB,CAA7C,EAAgD;AAC5C3B,yBAAKsG,YAAL,CAAkBtG,KAAKJ,CAAL,GAAS+B,MAA3B;AACA,yBAAKtB,QAAL,CAAcL,IAAd,EAAoBA,KAAK0C,SAAL,GAAiB,KAAK9D,QAAL,CAAcmB,MAAnD;AACAe,4BAAQlD,GAAR,CAAY,+BAAZ,EAA6CoC,KAAK0C,SAAlD;AACH;AACJ,aAND,MAMO;AACH,oBAAIwD,QAAQtG,CAAR,GAAYwG,MAAZ,IAAsBpG,KAAKJ,CAAL,GAAS+B,MAAT,GAAkB,CAAC,KAAK1D,OAAL,CAAaK,MAA1D,EAAkE;AAC9D0B,yBAAKsG,YAAL,CAAkBtG,KAAKJ,CAAL,GAAS+B,MAA3B;AACA,yBAAKtB,QAAL,CAAcL,IAAd,EAAoBA,KAAK0C,SAAL,GAAiB,KAAK9D,QAAL,CAAcmB,MAAnD;AACAe,4BAAQlD,GAAR,CAAY,6BAAZ,EAA2CoC,KAAK0C,SAAhD;AACH;AACJ;AACJ;;AAED,aAAKiD,eAAL,GAAuB,KAAK1H,OAAL,CAAa2B,CAApC;AACH;AA17BI,CAAT","file":"uiloopscrollview.js","sourceRoot":"../../../../../../../assets/script/wx/framework/widget","sourcesContent":["var DoTweenManager = require('dotweenmanager').getInstance();\r\nvar DoTweenType = require('dotweendefine').DoTweenType;\r\n\r\n/**\r\n * 排列方式枚举\r\n */\r\nvar ArrangeDirection = cc.Enum({\r\n    LEFT_TO_RIGHT: 0,\r\n    RIGHT_TO_LEFT: 1,\r\n    UP_TO_DOWN: 2,\r\n    DOWN_TO_UP: 3\r\n});\r\n\r\nvar self = null; // WARNING: 可能以后会造成问题\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        autoLayout: {\r\n            default: false,\r\n            tooltip: '是否使用Layout, 使用Layout将不能使用动画'\r\n        },\r\n\r\n        arrangeDirection: {\r\n            default: ArrangeDirection.LEFT_TO_RIGHT,\r\n            type: ArrangeDirection,\r\n            tooltip: 'item的排列方式, RIGHT_TO_LEFT和DOWN_TO_UP暂时还不支持'\r\n        },\r\n\r\n        removeMinLimit: {\r\n            default: 6,\r\n            tooltip: '移除item时需要判断的数量'\r\n        },\r\n        \r\n        itemDataCount: {\r\n            default: 0,\r\n            visible: false\r\n        },\r\n\r\n        insertAnimation: {\r\n            default: 0,\r\n            visible: false\r\n        },\r\n\r\n        removeAnimation: {\r\n            default: 0,\r\n            visible: false\r\n        },\r\n\r\n        _createItemFunc: null,\r\n        _updateItemFunc: null,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        cc.log('UILoopScrollView onLoaded with autoLayout ' + this.autoLayout);\r\n        self = this;\r\n\r\n        this.scrollView = this.node.getComponent(cc.ScrollView);\r\n        this.content = this.scrollView.content;\r\n\r\n        // this.blockInputPanel = cc.find('blockInput', this.node);\r\n        // this.blockInputPanel.active = false;\r\n\r\n        // if (this.autoLayout) {\r\n        //     this.content.getComponent(cc.Layout).enabled = true;\r\n        // } else {\r\n        //     this.content.getComponent(cc.Layout).enabled = false;\r\n        // }\r\n\r\n        // 设置scrollview的滚动方向\r\n        if (this.arrangeDirection == ArrangeDirection.LEFT_TO_RIGHT || this.arrangeDirection == ArrangeDirection.RIGHT_TO_LEFT) {\r\n            this.scrollView.horizontal = true;\r\n            this.scrollView.vertical = false;\r\n            this.scrollViewPanelScale = this.node.width;\r\n        } else if (this.arrangeDirection == ArrangeDirection.UP_TO_DOWN || this.arrangeDirection == ArrangeDirection.DOWN_TO_UP) {\r\n            this.scrollView.horizontal = false;\r\n            this.scrollView.vertical = true;\r\n            this.scrollViewPanelScale = this.node.height;\r\n        }\r\n\r\n        // 根据滚动方向调整content锚点\r\n        if (this.scrollView.vertical) {\r\n            this.content.anchorX = 0.5;\r\n            this.content.anchorY = 1;\r\n        } else {\r\n            this.content.anchorX = 0;\r\n            this.content.anchorY = 0.5;\r\n        }\r\n\r\n        // 参数设置\r\n        this.initParameter();\r\n\r\n        // item对象池\r\n        this.itemLoop = new cc.NodePool();\r\n\r\n        // 当前显示的items\r\n        this.itemList = new Array();\r\n\r\n        // 监听scrollview事件\r\n        // this.scrollView.node.on('scroll-began', this.scrollBegan, this);\r\n        // this.scrollView.node.on('scroll-ended', this.scrollEnd, this);\r\n    },\r\n\r\n    /**\r\n     * 初始化参数\r\n     */\r\n    initParameter () {\r\n        this.firstIndex = 0;\r\n        this.initNum = 0;\r\n        this.curItemNum = 0; // 调整content大小用\r\n\r\n        this.gapDis = 0;    // item间的间隙\r\n\r\n        this.firstItem = null;\r\n        this.lastItem = null;\r\n\r\n        this.editItemInFront = false;\r\n\r\n        this.isScrolling = false;\r\n        this.sollValidate = false;\r\n\r\n        this.startPos = cc.Vec2.ZERO;\r\n        this.deltaPos = cc.Vec2.ZERO;\r\n        if (this.arrangeDirection == ArrangeDirection.LEFT_TO_RIGHT) {\r\n            // this.startPos.x = this.content.x - this.content.width / 2;\r\n            this.deltaPos.x = 0.5;\r\n        } else if (this.arrangeDirection == ArrangeDirection.RIGHT_TO_LEFT) {\r\n            // this.startPos.x = this.content.x + this.content.width / 2;\r\n            this.deltaPos.x = -0.5;\r\n        } else if (this.arrangeDirection == ArrangeDirection.UP_TO_DOWN) {\r\n            // this.startPos.y = this.content.y + this.content.height / 2;\r\n            this.deltaPos.y = -0.5;\r\n        } else if (this.arrangeDirection == ArrangeDirection.DOWN_TO_UP) {\r\n            // this.startPos.y = this.content.y - this.content.height / 2;\r\n            this.deltaPos.y = 0.5;\r\n        }\r\n\r\n        // cc.log('content onload pos: ' + this.content.getPosition());\r\n        // cc.log('item start pos: ' + this.startPos);\r\n    },\r\n\r\n    start () {\r\n        // 当使用Layout时一次性生成所有item\r\n        // if (this.autoLayout && this.itemList.length == 0 && this.itemDataCount > 0) {\r\n\r\n            // for (let i = 0; i < this.itemDataCount; i++) {\r\n            //     this.createItemAuto();\r\n            // }\r\n        //     this.createAutoLayoutFirstPageView();\r\n        //     this.scrollView.scrollToTop(0);\r\n        // }\r\n\r\n        // 手动管理item\r\n        // if (!this.autoLayout && this.itemDataCount > 0) {\r\n        //     this.createFirstPageView();\r\n        // }\r\n\r\n        // this.initialize();\r\n    },\r\n\r\n    createItemAuto () {\r\n        if (this.itemList.length >= this.itemDataCount) return;\r\n\r\n        let item = this.createItem();\r\n        this.content.addChild(item);\r\n        item.setPosition(cc.Vec2.ZERO);\r\n        this.itemList.push(item);\r\n        this.initItem(item, this.itemList.length - 1);\r\n    },\r\n\r\n    /**\r\n     * 注册创建item回调方法\r\n     * @param {Function} func \r\n     */\r\n    registerCreateItemFunc (func) {\r\n        this._createItemFunc = func;\r\n    },\r\n\r\n    /**\r\n     * 注册更新item回调方法\r\n     * @param {Function} func \r\n     */\r\n    registerUpdateItemFunc (func) {\r\n        this._updateItemFunc = func;\r\n    },\r\n\r\n    /**\r\n     * 设置插入动画\r\n     * @param {ScrollAnimation} type \r\n     */\r\n    setInsertAnimation (type) {\r\n        this.insertAnimation = type;\r\n    },\r\n\r\n    /**\r\n     * 设置移除动画\r\n     * @param {ScrollAnimation} type \r\n     */\r\n    setRemoveAnimation (type) {\r\n        this.removeAnimation = type;\r\n    },\r\n\r\n    createAutoLayoutFirstPageView () {\r\n        this.createItemAuto();\r\n        if (this.scrollView.vertical) {\r\n            this.initNum = Math.floor(this.node.height / this.itemList[0].height);\r\n        } else {\r\n            this.initNum = Math.floor(this.node.width / this.itemList[0].width);\r\n        }\r\n        console.log('init num: ' + this.initNum);\r\n\r\n        for (let i = 0; i < this.initNum; i++) {\r\n            this.createItemAuto();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 生成首页\r\n     */\r\n    createFirstPageView () {\r\n        this.validate();\r\n        if (this.itemList.length > 0) {\r\n            // var num = 0;\r\n            if (this.scrollView.vertical) {\r\n                this.initNum = Math.floor(this.node.height / this.itemList[0].height);\r\n            } else {\r\n                this.initNum = Math.floor(this.node.width / this.itemList[0].width);\r\n            }\r\n            for (let i = 0; i < this.initNum; i++) {\r\n                this.validate();\r\n            }\r\n            console.log('init num: ' + this.initNum);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 设置列表item数量\r\n     * @param {Number} count \r\n     */\r\n    setTotalNum (count) {\r\n        this.itemDataCount = count;\r\n\r\n        if (this.arrangeDirection == ArrangeDirection.LEFT_TO_RIGHT || this.arrangeDirection == ArrangeDirection.UP_TO_DOWN) {\r\n            this.firstIndex = 0;\r\n        } else if (this.arrangeDirection == ArrangeDirection.RIGHT_TO_LEFT || this.arrangeDirection == ArrangeDirection.DOWN_TO_UP) {\r\n            this.firstIndex = count - 1;\r\n        }\r\n        if (this.firstIndex < 0) this.firstIndex = 0;\r\n    },\r\n\r\n    /**\r\n     * 重置scrollview, 更新列表item\r\n     */\r\n    resetView () {\r\n        if (this.itemDataCount < 0) return;\r\n\r\n        for (let i = 0; i < this.itemList.length; i++) {\r\n            this.itemList[i].destroy();\r\n        }\r\n        this.itemList = [];\r\n        this.itemLoop.clear();\r\n\r\n        this.content.width = 0;\r\n        this.content.height = 0;\r\n\r\n        this.editItemInFront = false;\r\n        this.isScrolling = false;\r\n\r\n        this.sollValidate = false;\r\n        // this.scrollView.enabled = true;\r\n        // this.blockInputPanel.active = false;\r\n\r\n        // this.scrollView.stopAutoScroll();\r\n        if (this.autoLayout) {\r\n            // this.createAutoLayoutFirstPageView();\r\n        } else {\r\n            // this.createFirstPageView();\r\n        }\r\n        // this.validate();\r\n        // this.scrollView.scrollToTop(0);\r\n        this.initialize();\r\n    },\r\n\r\n    /**\r\n     * 调整content的大小\r\n     * @param {Node} newItem \r\n     * @param {Number} ior - 表示增加或减少 值为: -1, 1\r\n     */\r\n    resizeContent (newItem, ior) {\r\n        // 前端增减不调整content大小\r\n        if (this.editItemInFront) return;\r\n\r\n        if (ior == 1) {\r\n            this.curItemNum++;\r\n        } else {\r\n            this.curItemNum--;\r\n        }\r\n\r\n        let offset = 0;\r\n        if (this.scrollView.vertical) {\r\n            offset = newItem.height + this.gapDis;\r\n            this.content.height = offset * this.itemDataCount;\r\n            this.content.width = newItem.width;\r\n\r\n            // 保证content最小高度, 使它能拉动\r\n            if (this.itemDataCount <= this.initNum && this.content.height < this.node.height) {\r\n                this.content.height = this.node.height;\r\n            }\r\n\r\n/*             offset = newItem.height + this.gapDis;\r\n            this.content.height += ior * offset;\r\n            this.content.width = newItem.width;\r\n\r\n            // 保证content高度不大于item总高度\r\n            if (this.content.height > offset * this.curItemNum) {\r\n                this.content.height = offset * this.curItemNum;\r\n            }\r\n\r\n            // 保证content最小高度, 使它能拉动\r\n            if (this.itemDataCount <= this.initNum && this.content.height < this.node.height) {\r\n                this.content.height = this.node.height;\r\n            } */\r\n        } else {\r\n            offset = newItem.width + this.gapDis;\r\n            this.content.width = offset * this.itemDataCount;\r\n            this.content.height = newItem.height;\r\n\r\n            // 保证content最小宽度, 使它能拉动\r\n            if (this.itemDataCount <= this.initNum && this.content.width < this.node.width) {\r\n                this.content.width = this.node.width;\r\n            }\r\n\r\n/*             offset = newItem.width + this.gapDis;\r\n            this.content.width += ior * offset;\r\n            this.content.height = newItem.height;\r\n\r\n            // 保证content宽度不大于item总宽度\r\n            if (this.content.width > offset * this.curItemNum) {\r\n                this.content.width = offset * this.curItemNum;\r\n            }\r\n\r\n            // 保证content最小宽度, 使它能拉动\r\n            if (this.itemDataCount <= this.initNum && this.content.width < this.node.width) {\r\n                this.content.width = this.node.width;\r\n            } */\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 调整item的位置, 在手动添加或删除item后调用\r\n     * @param {Number} index - 需要调整的item的起始位置\r\n     * @param {Number} fob - 往前或者往后移动, 值为: -1, 1\r\n     */\r\n    resetItemsPosition (index, fob, func) {\r\n        let toMoveList = this.itemList.slice(index);\r\n        if (toMoveList.length <= 0) {\r\n            // this.inAnimation(false);\r\n            if (!!func) {\r\n                func(index);\r\n            } else {\r\n                this.inAnimation(false);\r\n            }\r\n            return;\r\n        }\r\n\r\n        let callback = cc.callFunc(function () {\r\n            // this.inAnimation(false);\r\n            if (!!func) {\r\n                func(index);\r\n            } else {\r\n                this.inAnimation(false);\r\n            }\r\n        }, this);\r\n\r\n        if (this.scrollView.vertical) {\r\n            let offset = this.itemList[0].height + this.gapDis;\r\n            DoTweenManager.moveListUp(toMoveList, 0.3, fob * offset, callback);\r\n        } else {\r\n            let offset = this.itemList[0].width + this.gapDis;\r\n            DoTweenManager.moveListLeft(toMoveList, 0.3, -fob * offset, callback);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 移除item用, item列表和itemDataCount需要被更新\r\n     * @param {Number} index \r\n     */\r\n    removeItem (index) {\r\n        this.editItemInFront = false;\r\n\r\n        this.inAnimation(true);\r\n        \r\n        let pos = this.findItem(index);\r\n        let item = this.itemList.splice(pos, 1);\r\n\r\n        this.firstItem = this.itemList[0];\r\n        this.lastItem = this.itemList[this.itemList.length - 1];\r\n\r\n        // 更新item的dataIndex\r\n        for (let i = pos; i < this.itemList.length; i++) {\r\n            let item = this.itemList[i];\r\n            item.dataIndex -= 1;\r\n        }\r\n\r\n        // 在最后面补上一个item\r\n        if (!!this.lastItem && this.firstItem != this.lastItem && this.lastItem.dataIndex < this.itemDataCount - 1) {\r\n            // cc.log('new item add to back when remove');\r\n            // cc.log('last index: ' + this.lastItem.dataIndex);\r\n            // cc.log('data count: ' + this.itemDataCount);\r\n            let newItem = this.getItemFromLoop();\r\n            this.addToBack(this.lastItem, newItem);\r\n            this.lastItem = newItem;\r\n            this.itemList.push(newItem);\r\n        }\r\n\r\n        // 播放删除动画\r\n        if (this.removeAnimation == 0) {\r\n            this.putItemToLoop(item[0]);\r\n            this.resetItemsPosition(pos, 1);\r\n        } else {\r\n            let callback = cc.callFunc(function (item) {\r\n                this.putItemToLoop(item);\r\n                this.resetItemsPosition(pos, 1);\r\n            }, this, item[0]);\r\n            DoTweenManager.playScrollAnimation(this.removeAnimation, item[0], 0.4, callback);\r\n        }\r\n\r\n        // this.putItemToLoop(item[0]);\r\n        // this.resetItemsPosition(pos, 1);\r\n    },\r\n\r\n    /**\r\n     * 插入新的item到指定位置, 最好添加到首尾\r\n     * @param {Number} index \r\n     */\r\n    insertItem (index) {\r\n        let pos = this.findItem(index);\r\n        cc.log('insert to pos: ' + pos);\r\n        if (pos == -1) return;\r\n        \r\n        this.editItemInFront = false;\r\n        // this.inAnimation(true);\r\n        this.inserting = true;\r\n\r\n        this.resetItemsPosition(pos, -1, this.doInsertAnimation);\r\n    },\r\n\r\n    /**\r\n     * 插入item时播放动画 -- 暂时只有这个方法用到self\r\n     * @param {Number} index \r\n     */\r\n    doInsertAnimation (index) {\r\n        // 更新item的dataIndex\r\n        for (let i = index; i < self.itemList.length; i++) {\r\n            let item = self.itemList[i];\r\n            item.dataIndex += 1;\r\n        }\r\n\r\n        let newItem = self.getItemFromLoop();\r\n        self.itemList.splice(index, 0, newItem);\r\n\r\n        // 设置位置\r\n        if (self.itemList.length == 1) {\r\n            self.initItem(newItem, self.firstIndex);\r\n            let pos = self.startPos.add(cc.p(self.deltaPos.x * newItem.width, self.deltaPos.y * newItem.height));\r\n            newItem.setPosition(pos);\r\n        } else {\r\n            let preIndex = index - 1;\r\n            if (preIndex < 0) {\r\n                self.addToFront(self.itemList[index+1], newItem);\r\n            } else {\r\n                self.addToBack(self.itemList[preIndex], newItem);\r\n            }\r\n        }\r\n\r\n        // self.moveToEnd();\r\n\r\n        self.refreshViewItem();\r\n\r\n        self.firstItem = self.itemList[0];\r\n        self.lastItem = self.itemList[self.itemList.length - 1];\r\n\r\n        // 播放插入动画\r\n        if (self.insertAnimation == null) {\r\n            self.inserting = false;\r\n            // self.inAnimation(false);\r\n        } else {\r\n            let callback = cc.callFunc(function () {\r\n                self.inserting = false;\r\n                // self.inAnimation(false);\r\n            }, self);\r\n            DoTweenManager.playScrollAnimation(self.insertAnimation, newItem, 0.4, callback);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 设置播放动画时一些flag\r\n     * @param {Boolean} bool - true or false \r\n     */\r\n    inAnimation (bool) {\r\n        this.scrollView.enabled = !bool;\r\n        this.sollValidate = bool;\r\n        this.blockInputPanel.active = bool;\r\n    },\r\n\r\n    /**\r\n     * 滚动到最前面\r\n     */\r\n    moveToFront (time) {\r\n        time = !!!time ? 0.5 : time;\r\n        this.isScrolling = true;\r\n        if (this.scrollView.vertical) {\r\n            this.scrollView.scrollToTop(time);\r\n        } else {\r\n            this.scrollView.scrollToLeft(time);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 滚动到最后面\r\n     */\r\n    moveToEnd (time) {\r\n        time = !!!time ? 0.5 : time;\r\n        this.isScrolling = true;\r\n        if (this.scrollView.vertical) {\r\n            this.scrollView.scrollToBottom(time);\r\n        } else {\r\n            this.scrollView.scrollToRight(time);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 滚动到指定item\r\n     * @param {Number} index item index\r\n     * @param {Number} time 滚动时间\r\n     */\r\n    moveTo (index, time) {\r\n        if (this.itemList.length <= 0) return;\r\n        \r\n        time = !!!time ? 0.5 : time;\r\n        this.isScrolling = true;\r\n\r\n        let item = this.itemList[0];\r\n        if (this.scrollView.vertical) {\r\n            this.scrollView.scrollToOffset(cc.p(0, item.height * index), time);\r\n        } else {\r\n            this.scrollView.scrollToOffset(cc.p(item.width * index, 0), time);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 调用回调方法生成item\r\n     */\r\n    createItem () {\r\n        let item = this._createItemFunc();\r\n        return item;\r\n    },\r\n\r\n    /**\r\n     * 初始化item并更新显示的内容\r\n     * @param {Node} item \r\n     * @param {Number} index item的序号\r\n     */\r\n    initItem (item, index) {\r\n        item.dataIndex = index;\r\n        this._updateItemFunc(item, index);\r\n    },\r\n\r\n    /**\r\n     * 自动暂时删除item, 只被validate调用\r\n     * @param {Number} index item的序号\r\n     */\r\n    deleteItem (index) {\r\n        let item = this.itemList.splice(index, 1);\r\n\r\n        this.putItemToLoop(item[0]);\r\n\r\n        this.firstItem = this.itemList[0];\r\n        this.lastItem = this.itemList[this.itemList.length - 1];\r\n    },\r\n\r\n    /**\r\n     * 查找item在当前itemList的位置\r\n     * @param {Number} index - 要寻找的item的序号\r\n     * @returns {Number}\r\n     */\r\n    findItem (index) {\r\n        for (let i = 0; i < this.itemList.length; i++) {\r\n            let item = this.itemList[i];\r\n            if (item.dataIndex == index) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        if (index == this.itemList.length) {\r\n            return index;\r\n        }\r\n\r\n        return -1;\r\n    },\r\n\r\n    /**\r\n     * 更新所有item的显示\r\n     */\r\n    refreshViewItem () {\r\n        if (this.itemList.length > 0) {\r\n            this.itemList.forEach(item => {\r\n                this._updateItemFunc(item, item.dataIndex);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 从对象池获取item\r\n     */\r\n    getItemFromLoop () {\r\n        let item = this.itemLoop.get();\r\n        if (item == null) {\r\n            item = this.createItem();\r\n            console.log('new item be instaniated .....');\r\n        }\r\n\r\n        this.content.addChild(item);\r\n        // item.setPosition(cc.Vec2.ZERO);\r\n\r\n        // 调整content的size\r\n        this.resizeContent(item, 1);\r\n\r\n        return item;\r\n    },\r\n\r\n    /**\r\n     * 将要移除的item放入对象池中,\r\n     * 对象池中对象不超过3个\r\n     * @param {Node} item \r\n     */\r\n    putItemToLoop (item) {\r\n        // 调整content的size\r\n        this.resizeContent(item, -1);\r\n\r\n        if (this.itemLoop.size >= 3) {\r\n            console.log('item will be destoryed, index: ' + item.dataIndex);\r\n            item.destroy();\r\n            return;\r\n        }\r\n        item.dataIndex = -1;\r\n        this.itemLoop.put(item);\r\n    },\r\n\r\n    /**\r\n     * 判断item是否可见\r\n     * @param {Node} item \r\n     */\r\n    isVisible (item) {\r\n        if (item.x + this.content.x + item.width / 2 < -this.node.width / 2 ||\r\n            item.x + this.content.x - item.width / 2 > this.node.width / 2 ||\r\n            item.y + this.content.y + item.height / 2 < -this.node.height / 2 ||\r\n            item.y + this.content.y - item.height / 2 > this.node.height / 2) {\r\n            \r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 判断指定数量的item是否不可见\r\n     * @param {Number} index 判断的起始位置\r\n     * @param {Number} count 需要判断的数量\r\n     * @param {Number} dir 判断的方向, 值为: -1, 1\r\n     */\r\n    isItemsUnVisible (index, count, dir) {\r\n        if (this.itemList.length < count) return false;\r\n        for (let i = 0; i < count; i++) {\r\n            let item = this.itemList[index + dir * i];\r\n            if (this.isVisible(item)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * 检查items两端是否需要增删\r\n     */\r\n    validate () {\r\n        if (this.inserting == true) return;\r\n        if (this.itemDataCount <= 0 || this.autoLayout) return;\r\n\r\n        // console.log('content pos:', this.content.y);\r\n        // console.log('item list length: ', this.itemList.length);\r\n\r\n        // if (this.lastItem && this.lastItem.dataIndex == this.itemDataCount - 1) {\r\n        //     if (this.lastItem.y + this.content.y - this.node.height / 2 > 0) {\r\n        //         console.log('last item soll back >>>');\r\n        //         this.scrollView.scrollToBottom(0.3);\r\n        //     }\r\n        // }\r\n\r\n        // 添加第一个item\r\n        if (this.itemList.length == 0) {\r\n            let item = this.getItemFromLoop();\r\n            this.initItem(item, this.firstIndex);\r\n\r\n            // 设置位置\r\n            let pos = this.startPos.add(cc.p(this.deltaPos.x * item.width, this.deltaPos.y * item.height));\r\n            // cc.log('item true start pos: ' + pos);\r\n            // cc.log('content validate pos: ' + this.content.getPosition());\r\n            item.setPosition(pos);\r\n\r\n            this.firstItem = item;\r\n            this.lastItem = item;\r\n            this.itemList.push(item);\r\n        }\r\n\r\n        // this.sollValidate = false;\r\n\r\n        // 判断前端是否要增减\r\n        if (this.isVisible(this.firstItem)) {\r\n            if (this.firstItem.dataIndex > 0) {\r\n                // 添加新的item\r\n                this.editItemInFront = true;\r\n\r\n                let item = this.getItemFromLoop();\r\n                this.addToFront(this.firstItem, item);\r\n                this.firstItem = item;\r\n                this.itemList.unshift(item);\r\n                console.log('new item add to front, index: ' + item.dataIndex);\r\n            }\r\n        } else {\r\n            let delta = this.firstItem.y + this.content.y + this.firstItem.height / 2 + this.node.height / 2;\r\n            if (delta < 0) {\r\n                console.log('first item unvisible and unter the viewport:', delta);\r\n                let num = Math.floor((this.node.height - delta) / this.lastItem.height);\r\n\r\n                for (let i = 0; i < num; i++) {\r\n                    if (this.firstItem.dataIndex > 0) {\r\n                        // 添加新的item\r\n                        this.editItemInFront = true;\r\n        \r\n                        let item = this.getItemFromLoop();\r\n                        this.addToFront(this.firstItem, item);\r\n                        this.firstItem = item;\r\n                        this.itemList.unshift(item);\r\n                        console.log('new item add to front in unvisible, index: ' + item.dataIndex);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            // this.sollValidate = false;\r\n            // 判断是否要移除\r\n            if (this.isItemsUnVisible(0, this.removeMinLimit, 1)) {\r\n                this.editItemInFront = true;\r\n                console.log('first item be deleted, index: ' + this.firstItem.dataIndex);\r\n                this.deleteItem(0);\r\n                // this.firstItem = this.itemList[0];\r\n            }\r\n        }\r\n\r\n        // 判断后端是否要增减\r\n        // var preLastIndex = this.itemList.length - 2\r\n        // preLastIndex = preLastIndex < 0 ? 0 : preLastIndex;\r\n        // var preLastItem = this.itemList[preLastIndex];\r\n\r\n        if (this.isVisible(this.lastItem)) {\r\n        // if (this.isVisible(preLastItem)) {\r\n            if (this.lastItem.dataIndex < this.itemDataCount - 1) {\r\n                // 添加新的item\r\n                this.editItemInFront = false;\r\n\r\n                let item = this.getItemFromLoop();\r\n                this.addToBack(this.lastItem, item);\r\n                this.lastItem = item;\r\n                this.itemList.push(item);\r\n                console.log('new item add to back, index: ' + item.dataIndex);\r\n            }\r\n        } else {\r\n            let delta = this.lastItem.y + this.content.y - this.lastItem.height / 2 - this.node.height / 2;\r\n            if (delta > 0) {\r\n                console.log('last item unvisible and over the viewport:', delta);\r\n                let num = Math.floor((this.node.height + delta) / this.lastItem.height);\r\n\r\n                for (let i = 0; i < num; i++) {\r\n                    if (this.lastItem.dataIndex < this.itemDataCount - 1) {\r\n                        // 添加新的item\r\n                        this.editItemInFront = false;\r\n        \r\n                        let item = this.getItemFromLoop();\r\n                        this.addToBack(this.lastItem, item);\r\n                        this.lastItem = item;\r\n                        this.itemList.push(item);\r\n                        console.log('new item add to back in unvisible, index: ' + item.dataIndex);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            // this.sollValidate = false;\r\n            // 判断是否要移除\r\n            if (this.isItemsUnVisible(this.itemList.length - 1, this.removeMinLimit, -1)) {\r\n                this.editItemInFront = false;\r\n                console.log('last item be deleted, index: ' + this.lastItem.dataIndex);\r\n                this.deleteItem(this.itemList.length - 1);\r\n                // this.lastItem = this.itemList[this.itemList.length - 1];\r\n            }\r\n        }\r\n\r\n        // this.sollValidate = false;\r\n    },\r\n\r\n    /**\r\n     * 添加新item到item列表的前端\r\n     * @param {Node} priorItem - 当前第一个item\r\n     * @param {Node} newItem - 新的item\r\n     */\r\n    addToFront (priorItem, newItem) {\r\n        // cc.log('item will be add to front, index: ' + newItem.dataIndex);\r\n        this.initItem(newItem, priorItem.dataIndex - 1);\r\n        // 计算新item的位置, 要求item的Anchor在中心\r\n        if (this.scrollView.vertical) {\r\n            let offsetY = priorItem.height / 2 + this.gapDis + newItem.height / 2;\r\n            newItem.x = priorItem.x;\r\n            newItem.y = priorItem.y + offsetY;\r\n        } else {\r\n            let offsetX = priorItem.width / 2 + this.gapDis + newItem.width / 2;\r\n            newItem.x = priorItem.x - offsetX;\r\n            newItem.y = priorItem.y;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 添加新item到item列表的末尾\r\n     * @param {Node} backItem - 当前最后一个item\r\n     * @param {Node} newItem - 新的item\r\n     */\r\n    addToBack (backItem, newItem) {\r\n        this.initItem(newItem, backItem.dataIndex + 1);\r\n        // 计算新item的位置, 要求item的Anchor在中心\r\n        if (this.scrollView.vertical) {\r\n            let offsetY = backItem.height / 2 + this.gapDis + newItem.height / 2;\r\n            newItem.x = backItem.x;\r\n            newItem.y = backItem.y - offsetY;\r\n        } else {\r\n            let offsetX = backItem.width / 2 + this.gapDis + newItem.width / 2;\r\n            newItem.x = backItem.x + offsetX;\r\n            newItem.y = backItem.y;\r\n        }\r\n\r\n        console.log('new item pos:', newItem.getPosition());\r\n    },\r\n\r\n    /**\r\n     * scrollview开始滚动时调用\r\n     */\r\n    scrollBegan () {\r\n        this.isScrolling = true;\r\n    },\r\n\r\n    /**\r\n     * scrollview停止滚动时调用\r\n     */\r\n    scrollEnd () {\r\n        this.isScrolling = false;\r\n    },\r\n\r\n    update (dt) {\r\n        // scrollview滚动时或播放动画时调用\r\n        // if (this.isScrolling || this.sollValidate) {\r\n        //     this.validate();\r\n        // }\r\n\r\n        // this.validate();\r\n\r\n        // if (this.autoLayout) {\r\n        //     for (let i = 0; i < 5; i++) {\r\n        //         if (this.itemList.length < this.itemDataCount) {\r\n        //             this.createItemAuto();\r\n        //         }\r\n        //     }\r\n        // } else {\r\n        //     this.validate();\r\n        // }\r\n\r\n        // if (this.scrollView.isScrolling() || this.scrollView.isAutoScrolling() || this.sollValidate) {\r\n        //     if (this.autoLayout) {\r\n        //         for (let i = 0; i < 5; i++) {\r\n        //             if (this.itemList.length < this.itemDataCount) {\r\n        //                 this.createItemAuto();\r\n        //             }\r\n        //         }\r\n        //     } else {\r\n        //         this.validate();\r\n        //     }\r\n        // }\r\n\r\n        this.updateTimer += dt;\r\n        if (this.updateTimer < this.updateInterval) return;\r\n        this.updateTimer = 0;\r\n\r\n        this.newValidate();\r\n    },\r\n\r\n    initialize () {\r\n        console.log('scroll view be initialized >>>');\r\n\r\n        this.updateTimer = 0;\r\n        this.updateInterval = 0.2;\r\n        this.lastContentPosY = 0;\r\n        this.bufferZone = 600;\r\n\r\n        // this.content.width = 640;\r\n        // this.content.height = 9700;\r\n\r\n        let initNum = this.itemDataCount > 15 ? 15 : this.itemDataCount;\r\n\r\n        for (let i = 0; i < initNum; i++) {\r\n            let item = this.createItem();\r\n            this.content.addChild(item);\r\n            item.setPosition(0, -item.height * (0.5 + i) - this.gapDis * (i + 1));\r\n            this.initItem(item, i);\r\n            this.itemList.push(item);\r\n        }\r\n\r\n        if (this.itemList.length <= 0) return;\r\n        \r\n        let offset = this.itemList[0].height + this.gapDis;\r\n        this.content.width = this.itemList[0].width;\r\n        this.content.height = this.itemDataCount * offset + this.gapDis;\r\n\r\n        console.log('initialize finish, content size:', this.content.height);\r\n        console.log('initialize finish, itemlist length:', this.itemList.length);\r\n    },\r\n\r\n    getPositionInView (item) {\r\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\r\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\r\n        return viewPos;\r\n    },\r\n\r\n    newValidate () {\r\n        if (this.itemList.length <= 0) return;\r\n\r\n        let buffer = this.bufferZone;\r\n\r\n        let isDown = this.content.y < this.lastContentPosY;\r\n        let offset = (this.itemList[0].height + this.gapDis) * this.itemList.length;\r\n        for (let i = 0; i < this.itemList.length; ++i) {\r\n            let item = this.itemList[i];\r\n            let viewPos = this.getPositionInView(item);\r\n            if (isDown) {\r\n                if (viewPos.y < -buffer && item.y + offset < 0) {\r\n                    item.setPositionY(item.y + offset);\r\n                    this.initItem(item, item.dataIndex - this.itemList.length);\r\n                    console.log('update item when down, index:', item.dataIndex);\r\n                }\r\n            } else {\r\n                if (viewPos.y > buffer && item.y - offset > -this.content.height) {\r\n                    item.setPositionY(item.y - offset);\r\n                    this.initItem(item, item.dataIndex + this.itemList.length);\r\n                    console.log('update item when up, index:', item.dataIndex);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.lastContentPosY = this.content.y;\r\n    }\r\n});\r\n"]}