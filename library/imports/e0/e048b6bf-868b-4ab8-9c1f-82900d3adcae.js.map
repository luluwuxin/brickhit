{"version":3,"sources":["../../../../../../../../assets/script/wx/utils/cryptojs/lib/assets/script/wx/utils/cryptojs/lib/SHA256.js"],"names":["C","window","require","Crypto","util","charenc","UTF8","Binary","K","SHA256","message","options","digestbytes","wordsToBytes","_sha256","asBytes","asString","bytesToString","bytesToHex","constructor","String","stringToBytes","m","bytesToWords","l","length","H","w","a","b","c","d","e","f","g","h","i","j","t1","t2","gamma0x","gamma1x","gamma0","gamma1","ch","maj","sigma0","sigma1","_blocksize","_digestsize"],"mappings":";;;;;;AAAA,CAAC,YAAU;;AAEX,KAAIA,IAAK,OAAOC,MAAP,KAAkB,WAAnB,GAAkCC,QAAQ,UAAR,EAAoBC,MAAtD,GAA+DF,OAAOE,MAA9E;;AAEA;AACA,KAAIC,OAAOJ,EAAEI,IAAb;AAAA,KACIC,UAAUL,EAAEK,OADhB;AAAA,KAEIC,OAAOD,QAAQC,IAFnB;AAAA,KAGIC,SAASF,QAAQE,MAHrB;;AAKA;AACA,KAAIC,IAAI,CAAE,UAAF,EAAc,UAAd,EAA0B,UAA1B,EAAsC,UAAtC,EACE,UADF,EACc,UADd,EAC0B,UAD1B,EACsC,UADtC,EAEE,UAFF,EAEc,UAFd,EAE0B,UAF1B,EAEsC,UAFtC,EAGE,UAHF,EAGc,UAHd,EAG0B,UAH1B,EAGsC,UAHtC,EAIE,UAJF,EAIc,UAJd,EAI0B,UAJ1B,EAIsC,UAJtC,EAKE,UALF,EAKc,UALd,EAK0B,UAL1B,EAKsC,UALtC,EAME,UANF,EAMc,UANd,EAM0B,UAN1B,EAMsC,UANtC,EAOE,UAPF,EAOc,UAPd,EAO0B,UAP1B,EAOsC,UAPtC,EAQE,UARF,EAQc,UARd,EAQ0B,UAR1B,EAQsC,UARtC,EASE,UATF,EASc,UATd,EAS0B,UAT1B,EASsC,UATtC,EAUE,UAVF,EAUc,UAVd,EAU0B,UAV1B,EAUsC,UAVtC,EAWE,UAXF,EAWc,UAXd,EAW0B,UAX1B,EAWsC,UAXtC,EAYE,UAZF,EAYc,UAZd,EAY0B,UAZ1B,EAYsC,UAZtC,EAaE,UAbF,EAac,UAbd,EAa0B,UAb1B,EAasC,UAbtC,EAcE,UAdF,EAcc,UAdd,EAc0B,UAd1B,EAcsC,UAdtC,EAeE,UAfF,EAec,UAfd,EAe0B,UAf1B,EAesC,UAftC,CAAR;;AAiBA;AACA,KAAIC,SAAST,EAAES,MAAF,GAAW,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACnD,MAAIC,cAAcR,KAAKS,YAAL,CAAkBJ,OAAOK,OAAP,CAAeJ,OAAf,CAAlB,CAAlB;AACA,SAAOC,WAAWA,QAAQI,OAAnB,GAA6BH,WAA7B,GACAD,WAAWA,QAAQK,QAAnB,GAA8BT,OAAOU,aAAP,CAAqBL,WAArB,CAA9B,GACAR,KAAKc,UAAL,CAAgBN,WAAhB,CAFP;AAGA,EALD;;AAOA;AACAH,QAAOK,OAAP,GAAiB,UAAUJ,OAAV,EAAmB;;AAEnC;AACA,MAAIA,QAAQS,WAAR,IAAuBC,MAA3B,EAAmCV,UAAUJ,KAAKe,aAAL,CAAmBX,OAAnB,CAAV;AACnC;;AAEA,MAAIY,IAAIlB,KAAKmB,YAAL,CAAkBb,OAAlB,CAAR;AAAA,MACIc,IAAId,QAAQe,MAAR,GAAiB,CADzB;AAAA,MAEIC,IAAI,CAAE,UAAF,EAAc,UAAd,EAA0B,UAA1B,EAAsC,UAAtC,EACE,UADF,EACc,UADd,EAC0B,UAD1B,EACsC,UADtC,CAFR;AAAA,MAIIC,IAAI,EAJR;AAAA,MAKIC,CALJ;AAAA,MAKOC,CALP;AAAA,MAKUC,CALV;AAAA,MAKaC,CALb;AAAA,MAKgBC,CALhB;AAAA,MAKmBC,CALnB;AAAA,MAKsBC,CALtB;AAAA,MAKyBC,CALzB;AAAA,MAK4BC,CAL5B;AAAA,MAK+BC,CAL/B;AAAA,MAMIC,EANJ;AAAA,MAMQC,EANR;;AAQA;AACAjB,IAAEE,KAAK,CAAP,KAAa,QAAS,KAAKA,IAAI,EAA/B;AACAF,IAAE,CAAEE,IAAI,EAAJ,IAAU,CAAX,IAAiB,CAAlB,IAAuB,EAAzB,IAA+BA,CAA/B;;AAEA,OAAK,IAAIY,IAAI,CAAb,EAAgBA,IAAId,EAAEG,MAAtB,EAA8BW,KAAK,EAAnC,EAAuC;;AAEtCR,OAAIF,EAAE,CAAF,CAAJ;AACAG,OAAIH,EAAE,CAAF,CAAJ;AACAI,OAAIJ,EAAE,CAAF,CAAJ;AACAK,OAAIL,EAAE,CAAF,CAAJ;AACAM,OAAIN,EAAE,CAAF,CAAJ;AACAO,OAAIP,EAAE,CAAF,CAAJ;AACAQ,OAAIR,EAAE,CAAF,CAAJ;AACAS,OAAIT,EAAE,CAAF,CAAJ;;AAEA,QAAK,IAAIW,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;;AAE5B,QAAIA,IAAI,EAAR,EAAYV,EAAEU,CAAF,IAAOf,EAAEe,IAAID,CAAN,CAAP,CAAZ,KACK;;AAEJ,SAAII,UAAUb,EAAEU,IAAI,EAAN,CAAd;AAAA,SACII,UAAUd,EAAEU,IAAI,CAAN,CADd;AAAA,SAEIK,SAAU,CAAEF,WAAW,EAAZ,GAAmBA,YAAa,CAAjC,KACEA,WAAW,EAAZ,GAAmBA,YAAY,EADhC,IAEEA,YAAY,CAJ5B;AAAA,SAKIG,SAAU,CAAEF,WAAY,EAAb,GAAoBA,YAAY,EAAjC,KACEA,WAAY,EAAb,GAAoBA,YAAY,EADjC,IAEEA,YAAY,EAP5B;;AASAd,OAAEU,CAAF,IAAOK,UAAUf,EAAEU,IAAI,CAAN,MAAa,CAAvB,IACAM,MADA,IACUhB,EAAEU,IAAI,EAAN,MAAc,CADxB,CAAP;AAGA;;AAED,QAAIO,KAAMZ,IAAIC,CAAJ,GAAQ,CAACD,CAAD,GAAKE,CAAvB;AAAA,QACIW,MAAMjB,IAAIC,CAAJ,GAAQD,IAAIE,CAAZ,GAAgBD,IAAIC,CAD9B;AAAA,QAEIgB,SAAS,CAAElB,KAAK,EAAN,GAAaA,MAAO,CAArB,KACEA,KAAK,EAAN,GAAaA,MAAM,EADpB,KAEEA,KAAK,EAAN,GAAaA,MAAM,EAFpB,CAFb;AAAA,QAKImB,SAAS,CAAEf,KAAK,EAAN,GAAaA,MAAO,CAArB,KACEA,KAAK,EAAN,GAAaA,MAAM,EADpB,KAEEA,KAAM,CAAP,GAAaA,MAAM,EAFpB,CALb;;AAUAM,SAAK,CAACH,MAAM,CAAP,IAAYY,MAAZ,GAAqBH,EAArB,GAA2BpC,EAAE6B,CAAF,CAA3B,IAAoCV,EAAEU,CAAF,MAAS,CAA7C,CAAL;AACAE,SAAKO,SAASD,GAAd;;AAEAV,QAAID,CAAJ;AACAA,QAAID,CAAJ;AACAA,QAAID,CAAJ;AACAA,QAAKD,IAAIO,EAAL,KAAa,CAAjB;AACAP,QAAID,CAAJ;AACAA,QAAID,CAAJ;AACAA,QAAID,CAAJ;AACAA,QAAKU,KAAKC,EAAN,KAAc,CAAlB;AAEA;;AAEDb,KAAE,CAAF,KAAQE,CAAR;AACAF,KAAE,CAAF,KAAQG,CAAR;AACAH,KAAE,CAAF,KAAQI,CAAR;AACAJ,KAAE,CAAF,KAAQK,CAAR;AACAL,KAAE,CAAF,KAAQM,CAAR;AACAN,KAAE,CAAF,KAAQO,CAAR;AACAP,KAAE,CAAF,KAAQQ,CAAR;AACAR,KAAE,CAAF,KAAQS,CAAR;AAEA;;AAED,SAAOT,CAAP;AAEA,EArFD;;AAuFA;AACAjB,QAAOuC,UAAP,GAAoB,EAApB;;AAEAvC,QAAOwC,WAAP,GAAqB,EAArB;AAEC,CAjID","file":"SHA256.js","sourceRoot":"../../../../../../../../assets/script/wx/utils/cryptojs/lib","sourcesContent":["(function(){\r\n\r\nvar C = (typeof window === 'undefined') ? require('./Crypto').Crypto : window.Crypto;\r\n\r\n// Shortcuts\r\nvar util = C.util,\r\n    charenc = C.charenc,\r\n    UTF8 = charenc.UTF8,\r\n    Binary = charenc.Binary;\r\n\r\n// Constants\r\nvar K = [ 0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\r\n          0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\r\n          0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\r\n          0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\r\n          0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\r\n          0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\r\n          0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\r\n          0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\r\n          0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\r\n          0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\r\n          0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\r\n          0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\r\n          0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\r\n          0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\r\n          0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\r\n          0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2 ];\r\n\r\n// Public API\r\nvar SHA256 = C.SHA256 = function (message, options) {\r\n\tvar digestbytes = util.wordsToBytes(SHA256._sha256(message));\r\n\treturn options && options.asBytes ? digestbytes :\r\n\t       options && options.asString ? Binary.bytesToString(digestbytes) :\r\n\t       util.bytesToHex(digestbytes);\r\n};\r\n\r\n// The core\r\nSHA256._sha256 = function (message) {\r\n\r\n\t// Convert to byte array\r\n\tif (message.constructor == String) message = UTF8.stringToBytes(message);\r\n\t/* else, assume byte array already */\r\n\r\n\tvar m = util.bytesToWords(message),\r\n\t    l = message.length * 8,\r\n\t    H = [ 0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\r\n\t          0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19 ],\r\n\t    w = [],\r\n\t    a, b, c, d, e, f, g, h, i, j,\r\n\t    t1, t2;\r\n\r\n\t// Padding\r\n\tm[l >> 5] |= 0x80 << (24 - l % 32);\r\n\tm[((l + 64 >> 9) << 4) + 15] = l;\r\n\r\n\tfor (var i = 0; i < m.length; i += 16) {\r\n\r\n\t\ta = H[0];\r\n\t\tb = H[1];\r\n\t\tc = H[2];\r\n\t\td = H[3];\r\n\t\te = H[4];\r\n\t\tf = H[5];\r\n\t\tg = H[6];\r\n\t\th = H[7];\r\n\r\n\t\tfor (var j = 0; j < 64; j++) {\r\n\r\n\t\t\tif (j < 16) w[j] = m[j + i];\r\n\t\t\telse {\r\n\r\n\t\t\t\tvar gamma0x = w[j - 15],\r\n\t\t\t\t    gamma1x = w[j - 2],\r\n\t\t\t\t    gamma0  = ((gamma0x << 25) | (gamma0x >>>  7)) ^\r\n\t\t\t\t              ((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n\t\t\t\t               (gamma0x >>> 3),\r\n\t\t\t\t    gamma1  = ((gamma1x <<  15) | (gamma1x >>> 17)) ^\r\n\t\t\t\t              ((gamma1x <<  13) | (gamma1x >>> 19)) ^\r\n\t\t\t\t               (gamma1x >>> 10);\r\n\r\n\t\t\t\tw[j] = gamma0 + (w[j - 7] >>> 0) +\r\n\t\t\t\t       gamma1 + (w[j - 16] >>> 0);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar ch  = e & f ^ ~e & g,\r\n\t\t\t    maj = a & b ^ a & c ^ b & c,\r\n\t\t\t    sigma0 = ((a << 30) | (a >>>  2)) ^\r\n\t\t\t             ((a << 19) | (a >>> 13)) ^\r\n\t\t\t             ((a << 10) | (a >>> 22)),\r\n\t\t\t    sigma1 = ((e << 26) | (e >>>  6)) ^\r\n\t\t\t             ((e << 21) | (e >>> 11)) ^\r\n\t\t\t             ((e <<  7) | (e >>> 25));\r\n\r\n\r\n\t\t\tt1 = (h >>> 0) + sigma1 + ch + (K[j]) + (w[j] >>> 0);\r\n\t\t\tt2 = sigma0 + maj;\r\n\r\n\t\t\th = g;\r\n\t\t\tg = f;\r\n\t\t\tf = e;\r\n\t\t\te = (d + t1) >>> 0;\r\n\t\t\td = c;\r\n\t\t\tc = b;\r\n\t\t\tb = a;\r\n\t\t\ta = (t1 + t2) >>> 0;\r\n\r\n\t\t}\r\n\r\n\t\tH[0] += a;\r\n\t\tH[1] += b;\r\n\t\tH[2] += c;\r\n\t\tH[3] += d;\r\n\t\tH[4] += e;\r\n\t\tH[5] += f;\r\n\t\tH[6] += g;\r\n\t\tH[7] += h;\r\n\r\n\t}\r\n\r\n\treturn H;\r\n\r\n};\r\n\r\n// Package private blocksize\r\nSHA256._blocksize = 16;\r\n\r\nSHA256._digestsize = 32;\r\n\r\n})();\r\n"]}