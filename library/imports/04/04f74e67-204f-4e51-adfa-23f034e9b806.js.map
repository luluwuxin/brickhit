{"version":3,"sources":["../../../../../../assets/script/wx/common/assets/script/wx/common/commonLayer.js"],"names":["self","cc","Class","extends","Component","properties","mask","Node","textPreb","Prefab","onLoad","game","addPersistRootNode","node","_textList","Array","_speed","_textNode","instantiate","_maskSize","getContentSize","_textSize","_x","width","addChild","setPosition","v2","start","addText","text","push","update","dt","length","point","getPosition","x","splice","find","getComponent","Label","string"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,OAAO,IAAX;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,cAAML,GAAGM,IAhBD;AAiBRC,kBAASP,GAAGQ;AAjBJ,KAHP;;AAuBL;;AAEAC,UAzBK,oBAyBK;AACNV,eAAO,IAAP;AACAC,WAAGU,IAAH,CAAQC,kBAAR,CAA2BZ,KAAKa,IAAhC;AACAb,aAAKc,SAAL,GAAiB,IAAIC,KAAJ,EAAjB;AACAf,aAAKgB,MAAL,GAAc,GAAd;AACAhB,aAAKiB,SAAL,GAAiBhB,GAAGiB,WAAH,CAAelB,KAAKQ,QAApB,CAAjB;AACAR,aAAKmB,SAAL,GAAiBnB,KAAKM,IAAL,CAAUc,cAAV,EAAjB;AACApB,aAAKqB,SAAL,GAAiBrB,KAAKiB,SAAL,CAAeG,cAAf,EAAjB;AACApB,aAAKsB,EAAL,GAAUtB,KAAKmB,SAAL,CAAeI,KAAf,GAAqB,CAArB,GAAwBvB,KAAKqB,SAAL,CAAeE,KAAf,GAAqB,CAAvD;AACAvB,aAAKM,IAAL,CAAUkB,QAAV,CAAmBxB,KAAKiB,SAAxB;AACAjB,aAAKiB,SAAL,CAAeQ,WAAf,CAA2BxB,GAAGyB,EAAH,CAAM1B,KAAKsB,EAAX,EAAc,CAAd,CAA3B;AACH,KApCI;AAsCLK,SAtCK,mBAsCI,CAER,CAxCI;AAyCLC,WAzCK,mBAyCGC,IAzCH,EAyCQ;AACT7B,aAAKc,SAAL,CAAegB,IAAf,CAAoBD,IAApB;AACH,KA3CI;AA4CLE,UA5CK,kBA4CGC,EA5CH,EA4CO;AACR,YAAGhC,KAAKc,SAAL,CAAemB,MAAf,GAAwB,CAA3B,EAA6B;AACzB,gBAAIC,QAAQlC,KAAKiB,SAAL,CAAekB,WAAf,EAAZ;AACA,gBAAGD,MAAME,CAAN,GAAU,CAAEpC,KAAKsB,EAApB,EAAuB;AACnBtB,qBAAKc,SAAL,CAAeuB,MAAf,CAAsB,CAAtB,EAAwB,CAAxB;AACA,oBAAGrC,KAAKc,SAAL,CAAe,CAAf,CAAH,EAAqB;AACjB,wBAAIG,YAAYhB,GAAGqC,IAAH,CAAQ,MAAR,EAAetC,KAAKiB,SAApB,CAAhB;AACAA,8BAAUsB,YAAV,CAAuBtC,GAAGuC,KAA1B,EAAiCC,MAAjC,GAA0CzC,KAAKc,SAAL,CAAe,CAAf,CAA1C;AACH;AACDoB,sBAAME,CAAN,GAAUpC,KAAKsB,EAAf;AACH,aAPD,MAOK;AACDY,sBAAME,CAAN,IAAWJ,KAAGhC,KAAKgB,MAAnB;AACH;AACDhB,iBAAKiB,SAAL,CAAeQ,WAAf,CAA2BS,KAA3B;AACH;AAEJ;AA5DI,CAAT","file":"commonLayer.js","sourceRoot":"../../../../../../assets/script/wx/common","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar self = null;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        mask :cc.Node,\r\n        textPreb:cc.Prefab,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        self = this;\r\n        cc.game.addPersistRootNode(self.node);\r\n        self._textList = new Array();\r\n        self._speed = 100;\r\n        self._textNode = cc.instantiate(self.textPreb);\r\n        self._maskSize = self.mask.getContentSize();\r\n        self._textSize = self._textNode.getContentSize();\r\n        self._x = self._maskSize.width/2+ self._textSize.width/2 ;\r\n        self.mask.addChild(self._textNode);\r\n        self._textNode.setPosition(cc.v2(self._x,0));\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n    addText(text){\r\n        self._textList.push(text);\r\n    },\r\n    update (dt) {\r\n        if(self._textList.length > 0){\r\n            let point = self._textNode.getPosition();\r\n            if(point.x < - self._x){\r\n                self._textList.splice(0,1);\r\n                if(self._textList[0]){\r\n                    let _textNode = cc.find(\"text\",self._textNode);\r\n                    _textNode.getComponent(cc.Label).string = self._textList[0];\r\n                }\r\n                point.x = self._x;\r\n            }else{\r\n                point.x -= dt*self._speed;\r\n            }\r\n            self._textNode.setPosition(point);\r\n        }\r\n\r\n    },\r\n});\r\n"]}