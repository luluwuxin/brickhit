{"version":3,"sources":["../../../../../../assets/script/wx/rank/assets/script/wx/rank/friendLayer.js"],"names":["MSG","require","global","config","userOperate","self","cc","Class","extends","Component","properties","groupNode","default","type","Node","rank","Sprite","myRank","Label","titleText","onLoad","_isGroup","_userOperate","sys","platform","WECHAT_GAME","sharedCanvas","wx","getOpenDataContext","canvas","width","height","start","qunRankBtn","parent","node","js","getComponent","shareBtnWithGroup","active","getOpenDataQunRankBtn","initRank","isGroup","callbacks","_showFriendsRankImg","string","score","getScore","getFriendsNextBtn","openDataContext","postMessage","id","MessageID","ON_MSG_GET_GROUP_RANK_NEXT","ON_MSG_GET_FRIEND_RANK_NEXT","getFriendsBeforeBtn","ON_MSG_GET_GROUP_RANK_BEFORE","ON_MSG_GET_FRIEND_RANK_BEFORE","getFriendsCloseBtn","ON_MSG_GET_FRIEND_RANK_CLOSE","showSharedCanvas","todraw","unschedule","console","log","texture2D","Texture2D","initWithElement","handleLoadedTexture","sp","SpriteFrame","spriteFrame","schedule","closeBtn"],"mappings":";;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAMC,QAAQ,qBAAR,CAAV;AACA,IAAIC,SAASD,QAAQ,kBAAR,CAAb;AACA,IAAIE,SAASF,QAAQ,QAAR,CAAb;AACA,IAAIG,cAAcH,QAAQ,4BAAR,CAAlB;AACA,IAAII,OAAO,IAAX;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,mBAAU;AACNC,qBAAQ,IADF;AAENC,kBAAKP,GAAGQ;AAFF,SAhBF;AAoBRC,cAAK;AACDH,qBAAQ,IADP;AAEDC,kBAAKP,GAAGU;AAFP,SApBG;AAwBRC,gBAAO;AACHL,qBAAQ,IADL;AAEHC,kBAAKP,GAAGY;AAFL,SAxBC;AA4BRC,mBAAU;AACNP,qBAAQ,IADF;AAENC,kBAAKP,GAAGY;AAFF;AA5BF,KAHP;;AAqCL;;AAEAE,UAvCK,oBAuCK;AACNf,eAAQ,IAAR;AACAA,aAAKgB,QAAL,GAAgB,KAAhB;AACAhB,aAAKiB,YAAL,GAAoB,IAAIlB,WAAJ,EAApB;AACA,YAAGE,GAAGiB,GAAH,CAAOC,QAAP,IAAmBlB,GAAGiB,GAAH,CAAOE,WAA7B,EAAyC;AACrCpB,iBAAKqB,YAAL,GAAoBC,GAAGC,kBAAH,GAAwBC,MAA5C;AACAxB,iBAAKqB,YAAL,CAAkBI,KAAlB,GAA0B,GAA1B;AACAzB,iBAAKqB,YAAL,CAAkBK,MAAlB,GAA2B,GAA3B;AACH;AACJ,KAhDI;AAkDLC,SAlDK,mBAkDI;AACL;AACH,KApDI;AAqDLC,cArDK,wBAqDO;;AAER,YAAIC,SAAS7B,KAAK8B,IAAL,CAAUD,MAAvB;AACA,YAAIE,KAAKF,OAAOG,YAAP,CAAoB,YAApB,CAAT;AACA,YAAG,CAAC,CAAC,CAACD,EAAN,EAAS;AACL;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACAA,WAAGE,iBAAH,CAAqB,IAArB,EAA0B,YAAU;AAChCjC,iBAAK8B,IAAL,CAAUI,MAAV,GAAmB,KAAnB;AACAH,eAAGI,qBAAH;AACH,SAHD;AAKH,KAvEI;AAwELC,YAxEK,oBAwEIC,OAxEJ,EAwEYC,SAxEZ,EAwEsB;AACvBtC,aAAKsC,SAAL,GAAiBA,SAAjB;AACAtC,aAAKuC,mBAAL;AACA,YAAGF,OAAH,EAAW;AACPrC,iBAAKc,SAAL,CAAe0B,MAAf,GAAwB,MAAxB;AACAxC,iBAAKgB,QAAL,GAAgB,IAAhB;AACAhB,iBAAKM,SAAL,CAAe4B,MAAf,GAAwB,KAAxB;AACH,SAJD,MAIK;AACDlC,iBAAKc,SAAL,CAAe0B,MAAf,GAAwB,OAAxB;AACAxC,iBAAKgB,QAAL,GAAgB,KAAhB;AACAhB,iBAAKM,SAAL,CAAe4B,MAAf,GAAwB,IAAxB;AACH;AACD,YAAIO,QAAQ,CAAZ;AACAA,gBAAQzC,KAAKiB,YAAL,CAAkByB,QAAlB,EAAR;AACA1C,aAAKY,MAAL,CAAY4B,MAAZ,GAAqB,YAAYC,KAAjC;AACH,KAvFI;AAwFLE,qBAxFK,+BAwFc;AACf,YAAIC,kBAAkBtB,GAAGC,kBAAH,EAAtB;AACAqB,wBAAgBC,WAAhB,CAA4B;AACxBC,gBAAI9C,KAAKgB,QAAL,GAAgBrB,IAAIoD,SAAJ,CAAcC,0BAA9B,GAA2DrD,IAAIoD,SAAJ,CAAcE;AADrD,SAA5B;AAGAjD,aAAKuC,mBAAL;AACA;AACA;AACH,KAhGI;AAiGLW,uBAjGK,iCAiGgB;AACjB,YAAIN,kBAAkBtB,GAAGC,kBAAH,EAAtB;AACAqB,wBAAgBC,WAAhB,CAA4B;AACxBC,gBAAI9C,KAAKgB,QAAL,GAAgBrB,IAAIoD,SAAJ,CAAcI,4BAA9B,GAA6DxD,IAAIoD,SAAJ,CAAcK;AADvD,SAA5B;AAGApD,aAAKuC,mBAAL;AACA;AACA;AACH,KAzGI;AA0GLc,sBA1GK,gCA0Ge;AAChB,YAAIT,kBAAkBtB,GAAGC,kBAAH,EAAtB;AACAqB,wBAAgBC,WAAhB,CAA4B;AACxBC,gBAAGnD,IAAIoD,SAAJ,CAAcO;AADO,SAA5B;AAGH,KA/GI;AAiHLC,oBAjHK,8BAiHe;AAChB,YAAI,CAACvD,KAAKwD,MAAV,EAAkB;AACdxD,iBAAKyD,UAAL,CAAgBzD,KAAKuD,gBAArB;AACA;AACH;;AAEDG,gBAAQC,GAAR,CAAY,0BAAZ;;AAEA,YAAIC,YAAY,IAAI3D,GAAG4D,SAAP,EAAhB;AACAD,kBAAUE,eAAV,CAA0B9D,KAAKqB,YAA/B;AACAuC,kBAAUG,mBAAV;AACA,YAAIC,KAAK,IAAI/D,GAAGgE,WAAP,CAAmBL,SAAnB,CAAT;AACA5D,aAAKU,IAAL,CAAUwD,WAAV,GAAwBF,EAAxB;AACH,KA9HI;AAgILzB,uBAhIK,iCAgIgB;AACjBvC,aAAKwD,MAAL,GAAc,IAAd;AACAxD,aAAKyD,UAAL,CAAgBzD,KAAKuD,gBAArB;AACAvD,aAAKmE,QAAL,CAAcnE,KAAKuD,gBAAnB,EAAqC,GAArC,EAA0C,CAA1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACH,KAvJI;AAwJLa,YAxJK,sBAwJK;AACNpE,aAAK8B,IAAL,CAAUI,MAAV,GAAmB,KAAnB;AACAlC,aAAKwD,MAAL,GAAc,KAAd;AACA,YAAGxD,KAAKsC,SAAR,EAAkB;AACdtC,iBAAKsC,SAAL;AACH;AACJ;AA9JI;AA+JL;AA/JJ","file":"friendLayer.js","sourceRoot":"../../../../../../assets/script/wx/rank","sourcesContent":["//import { callbackify } from 'util';\r\n\r\n// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar MSG = require('../global/messageId');\r\nvar global = require('../global/global');\r\nvar config = require('config');\r\nvar userOperate = require('../userOperate/userOperate');\r\nvar self = null;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        groupNode:{\r\n            default:null,\r\n            type:cc.Node,\r\n        },\r\n        rank:{\r\n            default:null,\r\n            type:cc.Sprite,\r\n        },\r\n        myRank:{\r\n            default:null,\r\n            type:cc.Label, \r\n        },\r\n        titleText:{\r\n            default:null,\r\n            type:cc.Label,\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        self =  this;\r\n        self._isGroup = false;\r\n        self._userOperate = new userOperate();\r\n        if(cc.sys.platform == cc.sys.WECHAT_GAME){\r\n            self.sharedCanvas = wx.getOpenDataContext().canvas;\r\n            self.sharedCanvas.width = 620;\r\n            self.sharedCanvas.height = 650;\r\n        }\r\n    },\r\n\r\n    start () {\r\n        //self.initRank();\r\n    },  \r\n    qunRankBtn(){\r\n        \r\n        var parent = self.node.parent;\r\n        var js = parent.getComponent('wxAddLayer');\r\n        if(!!!js){\r\n            return;   \r\n        }\r\n        // if(config.shareTicket){ \r\n        //     self.node.active = false;\r\n        //     js.getOpenDataQunRankBtn();\r\n        // }else{\r\n        //     js.shareBtn();          \r\n        // }\r\n        js.shareBtnWithGroup(null,function(){\r\n            self.node.active = false;\r\n            js.getOpenDataQunRankBtn();\r\n        });\r\n       \r\n    },\r\n    initRank(isGroup,callbacks){\r\n        self.callbacks = callbacks;\r\n        self._showFriendsRankImg();\r\n        if(isGroup){\r\n            self.titleText.string = \"群排行榜\";\r\n            self._isGroup = true;\r\n            self.groupNode.active = false;\r\n        }else{\r\n            self.titleText.string = \"好友排行榜\";\r\n            self._isGroup = false;\r\n            self.groupNode.active = true;\r\n        }\r\n        var score = 0\r\n        score = self._userOperate.getScore();\r\n        self.myRank.string = \"本周我的分数：\" + score;\r\n    },\r\n    getFriendsNextBtn(){\r\n        let openDataContext = wx.getOpenDataContext()\r\n        openDataContext.postMessage({\r\n            id: self._isGroup ? MSG.MessageID.ON_MSG_GET_GROUP_RANK_NEXT : MSG.MessageID.ON_MSG_GET_FRIEND_RANK_NEXT,\r\n        })\r\n        self._showFriendsRankImg();\r\n        // self.node.runAction(cc.sequence(cc.delayTime(0.1),cc.callFunc(function(){\r\n        // })))\r\n    },\r\n    getFriendsBeforeBtn(){\r\n        let openDataContext = wx.getOpenDataContext()\r\n        openDataContext.postMessage({\r\n            id: self._isGroup ? MSG.MessageID.ON_MSG_GET_GROUP_RANK_BEFORE : MSG.MessageID.ON_MSG_GET_FRIEND_RANK_BEFORE,\r\n        })\r\n        self._showFriendsRankImg();\r\n        // self.node.runAction(cc.sequence(cc.delayTime(0.1),cc.callFunc(function(){\r\n        // })))\r\n    },\r\n    getFriendsCloseBtn(){\r\n        let openDataContext = wx.getOpenDataContext()\r\n        openDataContext.postMessage({\r\n            id:MSG.MessageID.ON_MSG_GET_FRIEND_RANK_CLOSE,\r\n        })\r\n    },\r\n\r\n    showSharedCanvas () {\r\n        if (!self.todraw) {\r\n            self.unschedule(self.showSharedCanvas);\r\n            // return;\r\n        }\r\n\r\n        console.log('get one sharedcanvas ...');\r\n\r\n        var texture2D = new cc.Texture2D();\r\n        texture2D.initWithElement(self.sharedCanvas);\r\n        texture2D.handleLoadedTexture();\r\n        var sp = new cc.SpriteFrame(texture2D);\r\n        self.rank.spriteFrame = sp;\r\n    },\r\n\r\n    _showFriendsRankImg(){\r\n        self.todraw = true;\r\n        self.unschedule(self.showSharedCanvas);\r\n        self.schedule(self.showSharedCanvas, 0.2, 5);\r\n\r\n        // let openDataContext = wx.getOpenDataContext();\r\n        // let sharedCanvas = openDataContext.canvas;\r\n\r\n        // var main = function () {\r\n        //     var texture2D = new cc.Texture2D();\r\n        //     texture2D.initWithElement(sharedCanvas);\r\n        //     texture2D.handleLoadedTexture();\r\n        //     var sp = new cc.SpriteFrame(texture2D);\r\n        //     self.rank.spriteFrame = sp;\r\n        // };\r\n\r\n        // setTimeout(main, 500);\r\n\r\n        // self.rank.spriteFrame.setTexture(texture2D);\r\n        //let canvas = wx.createCanvas()\r\n        // let canvas = cc.game.canvas;\r\n        // let context = canvas.getContext('2d')\r\n        // context.drawImage(sharedCanvas, 0, 0);\r\n    },\r\n    closeBtn(){\r\n        self.node.active = false;\r\n        self.todraw = false;\r\n        if(self.callbacks){\r\n            self.callbacks();\r\n        }\r\n    },\r\n    // update (dt) {},\r\n});\r\n"]}