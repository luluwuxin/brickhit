{"version":3,"sources":["../../../../../assets/resources/shader/assets/resources/shader/ShaderUtils.js"],"names":["ShaderUtils","shaderPrograms","setShader","sprite","shaderName","glProgram","cc","GLProgram","vert","require","js","formatStr","frag","sys","isNative","initWithString","initWithVertexShaderByteArray","addAttribute","macro","ATTRIBUTE_NAME_POSITION","VERTEX_ATTRIB_POSITION","ATTRIBUTE_NAME_COLOR","VERTEX_ATTRIB_COLOR","ATTRIBUTE_NAME_TEX_COORD","VERTEX_ATTRIB_TEX_COORDS","link","updateUniforms","_sgNode","setShaderProgram","setShaderUniform","uniformName","uniformValue","use","glProgram_state","GLProgramState","getOrCreateWithGLProgram","setUniformFloat","setUniformLocationWith1f","getUniformLocationForName","getGLShader","getShaderProgram","setGLShader","shader","module","exports"],"mappings":";;;;;;AAAA;AACA,IAAIA,cAAc;AACdC,oBAAgB,EADF;;AAGdC,eAAW,mBAAUC,MAAV,EAAkBC,UAAlB,EAA8B;AACrC,YAAIC,YAAY,KAAKJ,cAAL,CAAoBG,UAApB,CAAhB;AACA,YAAI,CAACC,SAAL,EAAgB;AACZA,wBAAY,IAAIC,GAAGC,SAAP,EAAZ;AACA,gBAAIC,OAAOC,QAAQH,GAAGI,EAAH,CAAMC,SAAN,CAAgB,SAAhB,EAA2BP,UAA3B,CAAR,CAAX;AACA,gBAAIQ,OAAOH,QAAQH,GAAGI,EAAH,CAAMC,SAAN,CAAgB,SAAhB,EAA2BP,UAA3B,CAAR,CAAX;AACA,gBAAIE,GAAGO,GAAH,CAAOC,QAAX,EAAqB;AACjBT,0BAAUU,cAAV,CAAyBP,IAAzB,EAA+BI,IAA/B;AACH,aAFD,MAEO;AACHP,0BAAUW,6BAAV,CAAwCR,IAAxC,EAA8CI,IAA9C;AACAP,0BAAUY,YAAV,CAAuBX,GAAGY,KAAH,CAASC,uBAAhC,EAAyDb,GAAGY,KAAH,CAASE,sBAAlE;AACAf,0BAAUY,YAAV,CAAuBX,GAAGY,KAAH,CAASG,oBAAhC,EAAsDf,GAAGY,KAAH,CAASI,mBAA/D;AACAjB,0BAAUY,YAAV,CAAuBX,GAAGY,KAAH,CAASK,wBAAhC,EAA0DjB,GAAGY,KAAH,CAASM,wBAAnE;AACH;AACDnB,sBAAUoB,IAAV;AACApB,sBAAUqB,cAAV;AACA,iBAAKzB,cAAL,CAAoBG,UAApB,IAAkCC,SAAlC;AACH;AACDF,eAAOwB,OAAP,CAAeC,gBAAf,CAAgCvB,SAAhC;AACH,KAtBa;AAuBdwB,sBAAkB,0BAASzB,UAAT,EAAqB0B,WAArB,EAAkCC,YAAlC,EAA+C;AAC7D,YAAI1B,YAAY,KAAKJ,cAAL,CAAoBG,UAApB,CAAhB;AACA,YAAIC,SAAJ,EAAe;AACXA,sBAAU2B,GAAV;AACA,gBAAI1B,GAAGO,GAAH,CAAOC,QAAX,EAAqB;AACjB,oBAAImB,kBAAkB3B,GAAG4B,cAAH,CAAkBC,wBAAlB,CAA2C9B,SAA3C,CAAtB;AACA4B,gCAAgBG,eAAhB,CAAgCN,WAAhC,EAA6CC,YAA7C;AACH,aAHD,MAGO;AACH1B,0BAAUgC,wBAAV,CAAmChC,UAAUiC,yBAAV,CAAoCR,WAApC,CAAnC,EAAqFC,YAArF;AACH;AACJ;AACJ,KAlCa;AAmCdQ,iBAAa,qBAAUpC,MAAV,EAAkB;AAC3B,eAAOA,OAAOwB,OAAP,CAAea,gBAAf,EAAP;AACH,KArCa;AAsCdC,iBAAa,qBAAUtC,MAAV,EAAkBuC,MAAlB,EAA0B;AACnCvC,eAAOwB,OAAP,CAAeC,gBAAf,CAAgCc,MAAhC;AACH;AAxCa,CAAlB;;AA2CAC,OAAOC,OAAP,GAAiB5C,WAAjB","file":"ShaderUtils.js","sourceRoot":"../../../../../assets/resources/shader","sourcesContent":["// ShaderUtils.js\r\nvar ShaderUtils = {\r\n    shaderPrograms: {},\r\n\r\n    setShader: function (sprite, shaderName) {\r\n        var glProgram = this.shaderPrograms[shaderName];\r\n        if (!glProgram) {\r\n            glProgram = new cc.GLProgram();\r\n            var vert = require(cc.js.formatStr(\"%s.vert\", shaderName));\r\n            var frag = require(cc.js.formatStr(\"%s.frag\", shaderName));\r\n            if (cc.sys.isNative) {\r\n                glProgram.initWithString(vert, frag);\r\n            } else {\r\n                glProgram.initWithVertexShaderByteArray(vert, frag);\r\n                glProgram.addAttribute(cc.macro.ATTRIBUTE_NAME_POSITION, cc.macro.VERTEX_ATTRIB_POSITION);\r\n                glProgram.addAttribute(cc.macro.ATTRIBUTE_NAME_COLOR, cc.macro.VERTEX_ATTRIB_COLOR);\r\n                glProgram.addAttribute(cc.macro.ATTRIBUTE_NAME_TEX_COORD, cc.macro.VERTEX_ATTRIB_TEX_COORDS);\r\n            }\r\n            glProgram.link();\r\n            glProgram.updateUniforms();\r\n            this.shaderPrograms[shaderName] = glProgram;\r\n        }\r\n        sprite._sgNode.setShaderProgram(glProgram);\r\n    },\r\n    setShaderUniform: function(shaderName, uniformName, uniformValue){\r\n        var glProgram = this.shaderPrograms[shaderName];\r\n        if (glProgram) {\r\n            glProgram.use();\r\n            if (cc.sys.isNative) {\r\n                var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(glProgram);\r\n                glProgram_state.setUniformFloat(uniformName, uniformValue);\r\n            } else {\r\n                glProgram.setUniformLocationWith1f(glProgram.getUniformLocationForName(uniformName), uniformValue);\r\n            }\r\n        }\r\n    },\r\n    getGLShader: function (sprite) {\r\n        return sprite._sgNode.getShaderProgram()\r\n    },\r\n    setGLShader: function (sprite, shader) {\r\n        sprite._sgNode.setShaderProgram(shader);\r\n    },\r\n};\r\n\r\nmodule.exports = ShaderUtils;\r\n"]}