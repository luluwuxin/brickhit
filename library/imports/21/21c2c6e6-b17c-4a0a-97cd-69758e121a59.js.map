{"version":3,"sources":["../../../../../../../../assets/script/wx/utils/cryptojs/lib/assets/script/wx/utils/cryptojs/lib/AES.js"],"names":["C","window","require","Crypto","util","charenc","UTF8","SBOX","INVSBOX","i","MULT2","MULT3","MULT9","MULTB","MULTD","MULTE","xtime","a","b","result","hiBitSet","RCON","state","keylength","nrounds","keyschedule","AES","encrypt","message","password","options","mode","OFB","fixOptions","m","constructor","String","stringToBytes","iv","randomBytes","_blocksize","k","PBKDF2","asBytes","_init","concat","bytesToBase64","decrypt","ciphertext","c","base64ToBytes","splice","bytesToString","_encryptblock","offset","row","col","round","push","shift","unshift","pop","s0","s1","s2","s3","_decryptblock","length","_keyexpansion","temp"],"mappings":"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","file":"AES.js","sourceRoot":"../../../../../../../../assets/script/wx/utils/cryptojs/lib","sourcesContent":["(function(){\r\n\r\nvar C = (typeof window === 'undefined') ? require('./Crypto').Crypto : window.Crypto;\r\n\r\n// Shortcuts\r\nvar util = C.util,\r\n    charenc = C.charenc,\r\n    UTF8 = charenc.UTF8;\r\n\r\n// Precomputed SBOX\r\nvar SBOX = [ 0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5,\r\n             0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,\r\n             0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\r\n             0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,\r\n             0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc,\r\n             0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\r\n             0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a,\r\n             0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,\r\n             0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\r\n             0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,\r\n             0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b,\r\n             0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\r\n             0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85,\r\n             0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,\r\n             0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\r\n             0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,\r\n             0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17,\r\n             0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\r\n             0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88,\r\n             0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,\r\n             0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\r\n             0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,\r\n             0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9,\r\n             0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\r\n             0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6,\r\n             0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,\r\n             0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\r\n             0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,\r\n             0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94,\r\n             0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\r\n             0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68,\r\n             0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 ];\r\n\r\n// Compute inverse SBOX lookup table\r\nfor (var INVSBOX = [], i = 0; i < 256; i++) INVSBOX[SBOX[i]] = i;\r\n\r\n// Compute mulitplication in GF(2^8) lookup tables\r\nvar MULT2 = [],\r\n    MULT3 = [],\r\n    MULT9 = [],\r\n    MULTB = [],\r\n    MULTD = [],\r\n    MULTE = [];\r\n\r\nfunction xtime(a, b) {\r\n\tfor (var result = 0, i = 0; i < 8; i++) {\r\n\t\tif (b & 1) result ^= a;\r\n\t\tvar hiBitSet = a & 0x80;\r\n\t\ta = (a << 1) & 0xFF;\r\n\t\tif (hiBitSet) a ^= 0x1b;\r\n\t\tb >>>= 1;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nfor (var i = 0; i < 256; i++) {\r\n\tMULT2[i] = xtime(i,2);\r\n\tMULT3[i] = xtime(i,3);\r\n\tMULT9[i] = xtime(i,9);\r\n\tMULTB[i] = xtime(i,0xB);\r\n\tMULTD[i] = xtime(i,0xD);\r\n\tMULTE[i] = xtime(i,0xE);\r\n}\r\n\r\n// Precomputed RCon lookup\r\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\r\n\r\n// Inner state\r\nvar state = [[], [], [], []],\r\n    keylength,\r\n    nrounds,\r\n    keyschedule;\r\n\r\nvar AES = C.AES = {\r\n\r\n\t/**\r\n\t * Public API\r\n\t */\r\n\r\n\tencrypt: function (message, password, options) {\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\t// Determine mode\r\n\t\tvar mode = options.mode || new C.mode.OFB;\r\n\r\n\t\t// Allow mode to override options\r\n\t\tif (mode.fixOptions) mode.fixOptions(options);\r\n\r\n\t\tvar\r\n\r\n\t\t\t// Convert to bytes if message is a string\r\n\t\t\tm = (\r\n\t\t\t\tmessage.constructor == String ?\r\n\t\t\t\tUTF8.stringToBytes(message) :\r\n\t\t\t\tmessage\r\n\t\t\t),\r\n\r\n\t\t\t// Generate random IV\r\n\t\t\tiv = options.iv || util.randomBytes(AES._blocksize * 4),\r\n\r\n\t\t\t// Generate key\r\n\t\t\tk = (\r\n\t\t\t\tpassword.constructor == String ?\r\n\t\t\t\t// Derive key from passphrase\r\n\t\t\t\tC.PBKDF2(password, iv, 32, { asBytes: true }) :\r\n\t\t\t\t// else, assume byte array representing cryptographic key\r\n\t\t\t\tpassword\r\n\t\t\t);\r\n\r\n\t\t// Encrypt\r\n\t\tAES._init(k);\r\n\t\tmode.encrypt(AES, m, iv);\r\n\r\n\t\t// Return ciphertext\r\n\t\tm = options.iv ? m : iv.concat(m);\r\n\t\treturn (options && options.asBytes) ? m : util.bytesToBase64(m);\r\n\r\n\t},\r\n\r\n\tdecrypt: function (ciphertext, password, options) {\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\t// Determine mode\r\n\t\tvar mode = options.mode || new C.mode.OFB;\r\n\r\n\t\t// Allow mode to override options\r\n\t\tif (mode.fixOptions) mode.fixOptions(options);\r\n\r\n\t\tvar\r\n\r\n\t\t\t// Convert to bytes if ciphertext is a string\r\n\t\t\tc = (\r\n\t\t\t\tciphertext.constructor == String ?\r\n\t\t\t\tutil.base64ToBytes(ciphertext):\r\n\t\t\t    ciphertext\r\n\t\t\t),\r\n\r\n\t\t\t// Separate IV and message\r\n\t\t\tiv = options.iv || c.splice(0, AES._blocksize * 4),\r\n\r\n\t\t\t// Generate key\r\n\t\t\tk = (\r\n\t\t\t\tpassword.constructor == String ?\r\n\t\t\t\t// Derive key from passphrase\r\n\t\t\t\tC.PBKDF2(password, iv, 32, { asBytes: true }) :\r\n\t\t\t\t// else, assume byte array representing cryptographic key\r\n\t\t\t\tpassword\r\n\t\t\t);\r\n\r\n\t\t// Decrypt\r\n\t\tAES._init(k);\r\n\t\tmode.decrypt(AES, c, iv);\r\n\r\n\t\t// Return plaintext\r\n\t\treturn (options && options.asBytes) ? c : UTF8.bytesToString(c);\r\n\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Package private methods and properties\r\n\t */\r\n\r\n\t_blocksize: 4,\r\n\r\n\t_encryptblock: function (m, offset) {\r\n\r\n\t\t// Set input\r\n\t\tfor (var row = 0; row < AES._blocksize; row++) {\r\n\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\tstate[row][col] = m[offset + col * 4 + row];\r\n\t\t}\r\n\r\n\t\t// Add round key\r\n\t\tfor (var row = 0; row < 4; row++) {\r\n\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\tstate[row][col] ^= keyschedule[col][row];\r\n\t\t}\r\n\r\n\t\tfor (var round = 1; round < nrounds; round++) {\r\n\r\n\t\t\t// Sub bytes\r\n\t\t\tfor (var row = 0; row < 4; row++) {\r\n\t\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\t\tstate[row][col] = SBOX[state[row][col]];\r\n\t\t\t}\r\n\r\n\t\t\t// Shift rows\r\n\t\t\tstate[1].push(state[1].shift());\r\n\t\t\tstate[2].push(state[2].shift());\r\n\t\t\tstate[2].push(state[2].shift());\r\n\t\t\tstate[3].unshift(state[3].pop());\r\n\r\n\t\t\t// Mix columns\r\n\t\t\tfor (var col = 0; col < 4; col++) {\r\n\r\n\t\t\t\tvar s0 = state[0][col],\r\n\t\t\t\t    s1 = state[1][col],\r\n\t\t\t\t    s2 = state[2][col],\r\n\t\t\t\t    s3 = state[3][col];\r\n\r\n\t\t\t\tstate[0][col] = MULT2[s0] ^ MULT3[s1] ^ s2 ^ s3;\r\n\t\t\t\tstate[1][col] = s0 ^ MULT2[s1] ^ MULT3[s2] ^ s3;\r\n\t\t\t\tstate[2][col] = s0 ^ s1 ^ MULT2[s2] ^ MULT3[s3];\r\n\t\t\t\tstate[3][col] = MULT3[s0] ^ s1 ^ s2 ^ MULT2[s3];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Add round key\r\n\t\t\tfor (var row = 0; row < 4; row++) {\r\n\t\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\t\tstate[row][col] ^= keyschedule[round * 4 + col][row];\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Sub bytes\r\n\t\tfor (var row = 0; row < 4; row++) {\r\n\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\tstate[row][col] = SBOX[state[row][col]];\r\n\t\t}\r\n\r\n\t\t// Shift rows\r\n\t\tstate[1].push(state[1].shift());\r\n\t\tstate[2].push(state[2].shift());\r\n\t\tstate[2].push(state[2].shift());\r\n\t\tstate[3].unshift(state[3].pop());\r\n\r\n\t\t// Add round key\r\n\t\tfor (var row = 0; row < 4; row++) {\r\n\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\tstate[row][col] ^= keyschedule[nrounds * 4 + col][row];\r\n\t\t}\r\n\r\n\t\t// Set output\r\n\t\tfor (var row = 0; row < AES._blocksize; row++) {\r\n\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\tm[offset + col * 4 + row] = state[row][col];\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_decryptblock: function (c, offset) {\r\n\r\n\t\t// Set input\r\n\t\tfor (var row = 0; row < AES._blocksize; row++) {\r\n\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\tstate[row][col] = c[offset + col * 4 + row];\r\n\t\t}\r\n\r\n\t\t// Add round key\r\n\t\tfor (var row = 0; row < 4; row++) {\r\n\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\tstate[row][col] ^= keyschedule[nrounds * 4 + col][row];\r\n\t\t}\r\n\r\n\t\tfor (var round = 1; round < nrounds; round++) {\r\n\r\n\t\t\t// Inv shift rows\r\n\t\t\tstate[1].unshift(state[1].pop());\r\n\t\t\tstate[2].push(state[2].shift());\r\n\t\t\tstate[2].push(state[2].shift());\r\n\t\t\tstate[3].push(state[3].shift());\r\n\r\n\t\t\t// Inv sub bytes\r\n\t\t\tfor (var row = 0; row < 4; row++) {\r\n\t\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\t\tstate[row][col] = INVSBOX[state[row][col]];\r\n\t\t\t}\r\n\r\n\t\t\t// Add round key\r\n\t\t\tfor (var row = 0; row < 4; row++) {\r\n\t\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\t\tstate[row][col] ^= keyschedule[(nrounds - round) * 4 + col][row];\r\n\t\t\t}\r\n\r\n\t\t\t// Inv mix columns\r\n\t\t\tfor (var col = 0; col < 4; col++) {\r\n\r\n\t\t\t\tvar s0 = state[0][col],\r\n\t\t\t\t    s1 = state[1][col],\r\n\t\t\t\t    s2 = state[2][col],\r\n\t\t\t\t    s3 = state[3][col];\r\n\r\n\t\t\t\tstate[0][col] = MULTE[s0] ^ MULTB[s1] ^ MULTD[s2] ^ MULT9[s3];\r\n\t\t\t\tstate[1][col] = MULT9[s0] ^ MULTE[s1] ^ MULTB[s2] ^ MULTD[s3];\r\n\t\t\t\tstate[2][col] = MULTD[s0] ^ MULT9[s1] ^ MULTE[s2] ^ MULTB[s3];\r\n\t\t\t\tstate[3][col] = MULTB[s0] ^ MULTD[s1] ^ MULT9[s2] ^ MULTE[s3];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Inv shift rows\r\n\t\tstate[1].unshift(state[1].pop());\r\n\t\tstate[2].push(state[2].shift());\r\n\t\tstate[2].push(state[2].shift());\r\n\t\tstate[3].push(state[3].shift());\r\n\r\n\t\t// Inv sub bytes\r\n\t\tfor (var row = 0; row < 4; row++) {\r\n\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\tstate[row][col] = INVSBOX[state[row][col]];\r\n\t\t}\r\n\r\n\t\t// Add round key\r\n\t\tfor (var row = 0; row < 4; row++) {\r\n\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\tstate[row][col] ^= keyschedule[col][row];\r\n\t\t}\r\n\r\n\t\t// Set output\r\n\t\tfor (var row = 0; row < AES._blocksize; row++) {\r\n\t\t\tfor (var col = 0; col < 4; col++)\r\n\t\t\t\tc[offset + col * 4 + row] = state[row][col];\r\n\t\t}\r\n\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Private methods\r\n\t */\r\n\r\n\t_init: function (k) {\r\n\t\tkeylength = k.length / 4;\r\n\t\tnrounds = keylength + 6;\r\n\t\tAES._keyexpansion(k);\r\n\t},\r\n\r\n\t// Generate a key schedule\r\n\t_keyexpansion: function (k) {\r\n\r\n\t\tkeyschedule = [];\r\n\r\n\t\tfor (var row = 0; row < keylength; row++) {\r\n\t\t\tkeyschedule[row] = [\r\n\t\t\t\tk[row * 4],\r\n\t\t\t\tk[row * 4 + 1],\r\n\t\t\t\tk[row * 4 + 2],\r\n\t\t\t\tk[row * 4 + 3]\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tfor (var row = keylength; row < AES._blocksize * (nrounds + 1); row++) {\r\n\r\n\t\t\tvar temp = [\r\n\t\t\t\tkeyschedule[row - 1][0],\r\n\t\t\t\tkeyschedule[row - 1][1],\r\n\t\t\t\tkeyschedule[row - 1][2],\r\n\t\t\t\tkeyschedule[row - 1][3]\r\n\t\t\t];\r\n\r\n\t\t\tif (row % keylength == 0) {\r\n\r\n\t\t\t\t// Rot word\r\n\t\t\t\ttemp.push(temp.shift());\r\n\r\n\t\t\t\t// Sub word\r\n\t\t\t\ttemp[0] = SBOX[temp[0]];\r\n\t\t\t\ttemp[1] = SBOX[temp[1]];\r\n\t\t\t\ttemp[2] = SBOX[temp[2]];\r\n\t\t\t\ttemp[3] = SBOX[temp[3]];\r\n\r\n\t\t\t\ttemp[0] ^= RCON[row / keylength];\r\n\r\n\t\t\t} else if (keylength > 6 && row % keylength == 4) {\r\n\r\n\t\t\t\t// Sub word\r\n\t\t\t\ttemp[0] = SBOX[temp[0]];\r\n\t\t\t\ttemp[1] = SBOX[temp[1]];\r\n\t\t\t\ttemp[2] = SBOX[temp[2]];\r\n\t\t\t\ttemp[3] = SBOX[temp[3]];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tkeyschedule[row] = [\r\n\t\t\t\tkeyschedule[row - keylength][0] ^ temp[0],\r\n\t\t\t\tkeyschedule[row - keylength][1] ^ temp[1],\r\n\t\t\t\tkeyschedule[row - keylength][2] ^ temp[2],\r\n\t\t\t\tkeyschedule[row - keylength][3] ^ temp[3]\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n})();\r\n"]}