{"version":3,"sources":["../../../../../../../../assets/script/wx/utils/cryptojs/lib/assets/script/wx/utils/cryptojs/lib/CryptoMath.js"],"names":["C","window","require","Crypto","util","u32","n","add","result","arguments","i","length","mult","m","gt","lt"],"mappings":";;;;;;AAAA,CAAC,YAAU;;AAEX,KAAIA,IAAK,OAAOC,MAAP,KAAkB,WAAnB,GAAkCC,QAAQ,UAAR,EAAoBC,MAAtD,GAA+DF,OAAOE,MAA9E;;AAEA;AACA,KAAIC,OAAOJ,EAAEI,IAAb;;AAEA;AACAA,MAAKC,GAAL,GAAW,UAAUC,CAAV,EAAa;AACvB,SAAOA,MAAM,CAAb;AACA,EAFD;;AAIA;AACAF,MAAKG,GAAL,GAAW,YAAY;AACtB,MAAIC,SAAS,KAAKH,GAAL,CAASI,UAAU,CAAV,CAAT,CAAb;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,UAAUE,MAA9B,EAAsCD,GAAtC;AACCF,YAAS,KAAKH,GAAL,CAASG,SAAS,KAAKH,GAAL,CAASI,UAAUC,CAAV,CAAT,CAAlB,CAAT;AADD,GAEA,OAAOF,MAAP;AACA,EALD;;AAOA;AACAJ,MAAKQ,IAAL,GAAY,UAAUC,CAAV,EAAaP,CAAb,EAAgB;AAC3B,SAAO,KAAKC,GAAL,CAAS,CAACD,IAAI,UAAL,IAAmBO,CAA5B,EACL,CAACP,IAAI,UAAL,IAAmBO,CADd,CAAP;AAEA,EAHD;;AAKA;AACAT,MAAKU,EAAL,GAAU,UAAUD,CAAV,EAAaP,CAAb,EAAgB;AACzB,SAAO,KAAKD,GAAL,CAASQ,CAAT,IAAc,KAAKR,GAAL,CAASC,CAAT,CAArB;AACA,EAFD;;AAIA;AACAF,MAAKW,EAAL,GAAU,UAAUF,CAAV,EAAaP,CAAb,EAAgB;AACzB,SAAO,KAAKD,GAAL,CAASQ,CAAT,IAAc,KAAKR,GAAL,CAASC,CAAT,CAArB;AACA,EAFD;AAIC,CApCD","file":"CryptoMath.js","sourceRoot":"../../../../../../../../assets/script/wx/utils/cryptojs/lib","sourcesContent":["(function(){\r\n\r\nvar C = (typeof window === 'undefined') ? require('./Crypto').Crypto : window.Crypto;\r\n\r\n// Shortcut\r\nvar util = C.util;\r\n\r\n// Convert n to unsigned 32-bit integer\r\nutil.u32 = function (n) {\r\n\treturn n >>> 0;\r\n};\r\n\r\n// Unsigned 32-bit addition\r\nutil.add = function () {\r\n\tvar result = this.u32(arguments[0]);\r\n\tfor (var i = 1; i < arguments.length; i++)\r\n\t\tresult = this.u32(result + this.u32(arguments[i]));\r\n\treturn result;\r\n};\r\n\r\n// Unsigned 32-bit multiplication\r\nutil.mult = function (m, n) {\r\n\treturn this.add((n & 0xFFFF0000) * m,\r\n\t\t\t(n & 0x0000FFFF) * m);\r\n};\r\n\r\n// Unsigned 32-bit greater than (>) comparison\r\nutil.gt = function (m, n) {\r\n\treturn this.u32(m) > this.u32(n);\r\n};\r\n\r\n// Unsigned 32-bit less than (<) comparison\r\nutil.lt = function (m, n) {\r\n\treturn this.u32(m) < this.u32(n);\r\n};\r\n\r\n})();\r\n"]}